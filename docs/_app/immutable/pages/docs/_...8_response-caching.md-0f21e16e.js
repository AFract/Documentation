import{S as Y,i as Z,s as ss,l as d,r as l,a as T,w as I,m,n as C,u as t,h as a,c as S,x as L,b as B,M as o,y as W,v as ns,f as z,t as V,B as j,_ as as}from"../../chunks/index-98cfa7ad.js";import{f as es}from"../../chunks/scroll-1be19199.js";import{C as X}from"../../chunks/CodeFence-182ee1eb.js";import{L as ps}from"../../chunks/Link-76ffd583.js";import"../../chunks/singletons-9aa31187.js";import"../../chunks/contexts-ec7bfa4f.js";function os(E){let e;return{c(){e=l("See this document")},l(p){e=t(p,"See this document")},m(p,c){B(p,e,c)},d(p){p&&a(e)}}}function ls(E){let e,p=E[0].title+"",c,h,i,k,$,x,N,b,r,P,_,q,U,D,G,H,w,F,y,M,R,A,f,v;return y=new ps({props:{href:"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/response?view=aspnetcore-6.0",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[os]},$$scope:{ctx:E}}}),A=new X({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:12,code:`<pre><code><span class="line"><span style="color: #E06C75">global</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">FastEndpoints</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">builder</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">WebApplication</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">CreateBuilder</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddResponseCaching</span><span style="color: #ABB2BF">(); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">app</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Build</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseAuthorization</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseResponseCaching</span><span style="color: #ABB2BF">(); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Run</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span></code></pre>`}}),f=new X({props:{title:"Endpoint.cs",lang:"csharp",ext:"cs",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">EndpointWithoutRequest</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Verbs</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">GET</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Routes</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/cached-ticks&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">ResponseCache</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">60</span><span style="color: #ABB2BF">); </span><span style="color: #7F848E; font-style: italic">//cache for 60 seconds</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Task</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">HandleAsync</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">CancellationToken</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ct</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">SendAsync</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">new</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">Message</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;this response is cached&quot;</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">Ticks</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">DateTime</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">UtcNow</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Ticks</span></span>
<span class="line"><span style="color: #ABB2BF">        });</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){e=d("h1"),c=l(p),h=T(),i=d("p"),k=l("In order to get response caching working, you need to enable the response caching middleware and define how responses are cached using the "),$=d("strong"),x=l("ResponseCache()"),N=l(" method in the endpoint configuration."),b=T(),r=d("p"),P=l("This method supports all arguments of the "),_=d("strong"),q=l("[ResponseCache]"),U=l(" attribute you'd typically use with mvc except for the "),D=d("strong"),G=l("CacheProfileName"),H=l(" argument as cache profiles are not supported."),w=T(),F=d("p"),I(y.$$.fragment),M=l(" for an intro to response caching in ASP.NET middleware."),R=T(),I(A.$$.fragment),I(f.$$.fragment)},l(s){e=m(s,"H1",{});var n=C(e);c=t(n,p),n.forEach(a),h=S(s),i=m(s,"P",{});var u=C(i);k=t(u,"In order to get response caching working, you need to enable the response caching middleware and define how responses are cached using the "),$=m(u,"STRONG",{});var J=C($);x=t(J,"ResponseCache()"),J.forEach(a),N=t(u," method in the endpoint configuration."),u.forEach(a),b=S(s),r=m(s,"P",{});var g=C(r);P=t(g,"This method supports all arguments of the "),_=m(g,"STRONG",{});var K=C(_);q=t(K,"[ResponseCache]"),K.forEach(a),U=t(g," attribute you'd typically use with mvc except for the "),D=m(g,"STRONG",{});var Q=C(D);G=t(Q,"CacheProfileName"),Q.forEach(a),H=t(g," argument as cache profiles are not supported."),g.forEach(a),w=S(s),F=m(s,"P",{});var O=C(F);L(y.$$.fragment,O),M=t(O," for an intro to response caching in ASP.NET middleware."),O.forEach(a),R=S(s),L(A.$$.fragment,s),L(f.$$.fragment,s)},m(s,n){B(s,e,n),o(e,c),B(s,h,n),B(s,i,n),o(i,k),o(i,$),o($,x),o(i,N),B(s,b,n),B(s,r,n),o(r,P),o(r,_),o(_,q),o(r,U),o(r,D),o(D,G),o(r,H),B(s,w,n),B(s,F,n),W(y,F,null),o(F,M),B(s,R,n),W(A,s,n),W(f,s,n),v=!0},p(s,[n]){(!v||n&1)&&p!==(p=s[0].title+"")&&ns(c,p);const u={};n&2&&(u.$$scope={dirty:n,ctx:s}),y.$set(u)},i(s){v||(z(y.$$.fragment,s),z(A.$$.fragment,s),z(f.$$.fragment,s),v=!0)},o(s){V(y.$$.fragment,s),V(A.$$.fragment,s),V(f.$$.fragment,s),v=!1},d(s){s&&a(e),s&&a(h),s&&a(i),s&&a(b),s&&a(r),s&&a(w),s&&a(F),j(y),s&&a(R),j(A,s),j(f,s)}}}function ts(E,e,p){let c;return as(E,es,h=>p(0,c=h)),[c]}class As extends Y{constructor(e){super(),Z(this,e,ts,ls,ss,{})}}export{As as default};
