import{S as Io,i as Ho,s as Jo,l as i,r as t,a as y,w as F,m as B,n as c,u as l,h as n,c as f,x as A,p as h,b as a,M as o,y as $,v as Uo,f as m,t as E,B as C,_ as Yo}from"../../chunks/index-98cfa7ad.js";import{f as Wo}from"../../chunks/scroll-1be19199.js";import{C as g}from"../../chunks/CodeFence-182ee1eb.js";import{L as D}from"../../chunks/Link-76ffd583.js";import"../../chunks/singletons-9aa31187.js";import"../../chunks/contexts-ec7bfa4f.js";function Ko(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Lo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Mo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Vo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Qo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Xo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function Zo(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function sa(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function na(d){let r;return{c(){r=t("#")},l(p){r=l(p,"#")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function ea(d){let r;return{c(){r=t("see here")},l(p){r=l(p,"see here")},m(p,u){a(p,r,u)},d(p){p&&n(r)}}}function oa(d){let r,p=d[0].title+"",u,$s,T,N,Mn,Bn,ms,Vn,cn,G,Qn,js,Xn,Zn,yn,x,j,se,fn,I,ne,Is,ee,oe,un,es,z,H,ae,dn,Es,te,Fn,os,Cs,le,An,as,hs,pe,$n,ts,v,re,Hs,ie,Be,Js,ce,ye,mn,S,J,fe,En,gs,ue,Cn,_,de,Us,Fe,Ae,Ys,$e,me,hn,ls,U,Ee,Ws,Ce,he,gn,ps,k,Y,ge,bn,W,be,Ks,ve,_e,vn,K,we,Ls,De,Te,_n,b,xe,Ms,ze,Se,Vs,ke,Oe,Qs,qe,Pe,wn,L,Re,Xs,Ne,Ge,Dn,rs,O,M,je,Tn,bs,Ie,xn,is,q,V,He,zn,vs,Je,Sn,_s,Ue,kn,ws,Ye,On,Bs,cs,P,Q,We,qn,Ds,Ke,Pn,Ts,Le,Rn,ys,fs,R,X,Me,Nn,xs,Ve,Gn,zs,Qe,jn,Z,Xe,Zs,Ze,so,In,Ss,sn,no,Hn,us,ks,nn,eo,Jn,ds,w,oo,en,ao,to,ss,lo,on;return N=new D({props:{class:"header-anchor",href:"#customizing-functionality","aria-hidden":"true",$$slots:{default:[Ko]},$$scope:{ctx:d}}}),j=new D({props:{class:"header-anchor",href:"#specify-json-serializer-options","aria-hidden":"true",$$slots:{default:[Lo]},$$scope:{ctx:d}}}),es=new g({props:{lang:"csharp",ext:"cs",linesCount:8,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">SerializerOptions</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PropertyNamingPolicy</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">JsonNamingPolicy</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">CamelCase</span><span style="color: #ABB2BF">; </span><span style="color: #7F848E; font-style: italic">// set null for pascal case</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),H=new D({props:{class:"header-anchor",href:"#global-route-prefix","aria-hidden":"true",$$slots:{default:[Mo]},$$scope:{ctx:d}}}),os=new g({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:5,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">RoutingOptions</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">o</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">o</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Prefix</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;api&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),as=new g({props:{lang:"csharp",ext:"cs",linesCount:4,code:`<pre><code><span class="line"><span style="color: #61AFEF">Get</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;client/update&quot;</span><span style="color: #ABB2BF">); </span><span style="color: #56B6C2">-&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/api/client/update&quot;</span></span>
<span class="line"><span style="color: #61AFEF">Put</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;inventory/delete&quot;</span><span style="color: #ABB2BF">); </span><span style="color: #56B6C2">-&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/api/inventory/delete&quot;</span></span>
<span class="line"><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;sales/recent-list&quot;</span><span style="color: #ABB2BF">); </span><span style="color: #56B6C2">-&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;/api/sales/recent-list&quot;</span></span>
<span class="line"></span></code></pre>`}}),ts=new g({props:{lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;user/create&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">RoutePrefixOverride</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;mobile&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),J=new D({props:{class:"header-anchor",href:"#filtering-endpoint-auto-registration","aria-hidden":"true",$$slots:{default:[Vo]},$$scope:{ctx:d}}}),ls=new g({props:{lang:"csharp",ext:"cs",linesCount:13,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">EndpointRegistrationFilter</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ep</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">ep</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Verbs</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Contains</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;GET&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #56B6C2">&amp;&amp;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ep</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Routes</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Contains</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/mobile/test&quot;</span><span style="color: #ABB2BF">))</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">; </span><span style="color: #7F848E; font-style: italic">// don&#39;t register this endpoint</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),ps=new g({props:{lang:"csharp",ext:"cs",linesCount:19,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Get</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;client/update&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Tags</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Deprecated&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;ToBeDeleted&quot;</span><span style="color: #ABB2BF">); </span><span style="color: #7F848E; font-style: italic">// has no relationship with Swagger tags</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">EndpointRegistrationFilter</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ep</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">ep</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Tags</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Contains</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Deprecated&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">is</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">true</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">; </span><span style="color: #7F848E; font-style: italic">// don&#39;t register this endpoint</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),Y=new D({props:{class:"header-anchor",href:"#global-endpoint-options","aria-hidden":"true",$$slots:{default:[Qo]},$$scope:{ctx:d}}}),rs=new g({props:{lang:"csharp",ext:"cs",linesCount:13,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">GlobalEndpointOptions</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">endpoint</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">) =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">endpoint</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Routes</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">0</span><span style="color: #ABB2BF">].</span><span style="color: #61AFEF">StartsWith</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/admin&quot;</span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">is</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">true</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E06C75">builder</span></span>
<span class="line"><span style="color: #ABB2BF">              .</span><span style="color: #61AFEF">RequireHost</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;admin.domain.com&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">              .</span><span style="color: #61AFEF">Produces</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">ErrorResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">400</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;application/problem+json&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),M=new D({props:{class:"header-anchor",href:"#customizing-error-responses","aria-hidden":"true",$$slots:{default:[Xo]},$$scope:{ctx:d}}}),is=new g({props:{lang:"csharp",ext:"cs",linesCount:16,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ErrorResponseBuilder</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">failures</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">_</span><span style="color: #ABB2BF">) =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">list</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">List</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">KeyValuePair</span><span style="color: #ABB2BF">&lt;</span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">, </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">&gt;&gt;();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">foreach</span><span style="color: #ABB2BF"> (</span><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">err</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">in</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">failures</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #E5C07B">list</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Add</span><span style="color: #ABB2BF">(</span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">err</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PropertyName</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">err</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ErrorMessage</span><span style="color: #ABB2BF">));</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">list</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    };</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ErrorResponseStatusCode</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">StatusCodes</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Status422UnprocessableEntity</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),V=new D({props:{class:"header-anchor",href:"#customizing-de-serialization-of-json","aria-hidden":"true",$$slots:{default:[Zo]},$$scope:{ctx:d}}}),Bs=new g({props:{lang:"text",ext:"text",linesCount:5,code:`<pre><code><span class="line"><span style="color: undefined">HttpRequest: the http request object</span></span>
<span class="line"><span style="color: undefined">Type: the type of the request dto</span></span>
<span class="line"><span style="color: undefined">JsonSerializerContext?: nullable json serializer context</span></span>
<span class="line"><span style="color: undefined">CancellationToken: a cancellation token</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),cs=new g({props:{lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #E5C07B">config</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">RequestDeserializer</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">tDto</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">jCtx</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">ct</span><span style="color: #ABB2BF">) =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">reader</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">StreamReader</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Body</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Newtonsoft</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Json</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">JsonConvert</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">DeserializeObject</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">reader</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">ReadToEndAsync</span><span style="color: #ABB2BF">(), </span><span style="color: #E06C75">tDto</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">};</span></span>
<span class="line"></span></code></pre>`}}),Q=new D({props:{class:"header-anchor",href:"#customizing-serialization-of-response-dtos","aria-hidden":"true",$$slots:{default:[sa]},$$scope:{ctx:d}}}),ys=new g({props:{lang:"text",ext:"text",linesCount:6,code:`<pre><code><span class="line"><span style="color: undefined">HttpResponse: the http response object</span></span>
<span class="line"><span style="color: undefined">object: the response dto to be serialized</span></span>
<span class="line"><span style="color: undefined">string: the response content-type</span></span>
<span class="line"><span style="color: undefined">JsonserializerContext?: nullable json serializer context</span></span>
<span class="line"><span style="color: undefined">CancellationToken: a cancellation token</span></span>
<span class="line"><span style="color: undefined"></span></span></code></pre>`}}),fs=new g({props:{lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #E5C07B">config</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ResponseSerializer</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">rsp</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">dto</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">cType</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">jCtx</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">ct</span><span style="color: #ABB2BF">) =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">rsp</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ContentType</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">cType</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">rsp</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">WriteAsync</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Newtonsoft</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Json</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">JsonConvert</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">SerializeObject</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75">dto</span><span style="color: #ABB2BF">), </span><span style="color: #E06C75">ct</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">};</span></span>
<span class="line"></span></code></pre>`}}),X=new D({props:{class:"header-anchor",href:"#source-generator-based-startup-type-discovery","aria-hidden":"true",$$slots:{default:[na]},$$scope:{ctx:d}}}),us=new g({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`dotnet add package FastEndpoints.Generator
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #ABB2BF">dotnet add package FastEndpoints.Generator</span></span>
<span class="line"></span></code></pre>`}}),ds=new g({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:5,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">o</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">o</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">SourceGeneratorDiscoveredTypes</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">DiscoveredTypes</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">All</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),ss=new D({props:{href:"https://github.com/dj-nitehawk/FastEndpoints/issues/117#issuecomment-1136891324",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ea]},$$scope:{ctx:d}}}),{c(){r=i("h1"),u=t(p),$s=y(),T=i("h2"),F(N.$$.fragment),Mn=t(" Customizing Functionality"),Bn=y(),ms=i("p"),Vn=t("There are several areas you can customize/override the default functionality of the library."),cn=y(),G=i("p"),Qn=t("All configuration settings must be specified during app startup with the "),js=i("strong"),Xn=t("UseFastEndpoints()"),Zn=t(" call."),yn=y(),x=i("h2"),F(j.$$.fragment),se=t(" Specify JSON Serializer Options"),fn=y(),I=i("p"),ne=t("The settings for the default json serializer which is "),Is=i("strong"),ee=t("System.Text.Json"),oe=t(" can be set like so:"),un=y(),F(es.$$.fragment),z=i("h2"),F(H.$$.fragment),ae=t(" Global Route Prefix"),dn=y(),Es=i("p"),te=t("You can have a specified string automatically prepended to all route names in your app instead of repeating it in each and every route config method by specifying the prefix at app startup."),Fn=y(),F(os.$$.fragment),Cs=i("p"),le=t("For example, the following route config methods would result in the below endpoint routes:"),An=y(),F(as.$$.fragment),hs=i("p"),pe=t("If needed, you can override or disable the global prefix from within individual endpoints like so:"),$n=y(),F(ts.$$.fragment),v=i("p"),re=t("In order to disable the global prefix, simply pass in a "),Hs=i("strong"),ie=t("string.Empty"),Be=t(" to the "),Js=i("strong"),ce=t("RoutePrefixOverride()"),ye=t(" method."),mn=y(),S=i("h2"),F(J.$$.fragment),fe=t(" Filtering Endpoint Auto Registration"),En=y(),gs=i("p"),ue=t("If you'd like to prevent some of the endpoints in your project to be not auto registered during startup, you have the option to supply a filtering function which will be run against each discovered endpoint."),Cn=y(),_=i("p"),de=t("If your function returns "),Us=i("strong"),Fe=t("true"),Ae=t(", that particular endpoint will be registered. If the function returns "),Ys=i("strong"),$e=t("false"),me=t(" that endpoint will be ignored and not registered."),hn=y(),F(ls.$$.fragment),U=i("p"),Ee=t("It is also possible to set a "),Ws=i("strong"),Ce=t("Tag"),he=t(" for an endpoint and use that tag to filter out endpoints according to tags during registration as shown below:"),gn=y(),F(ps.$$.fragment),k=i("h2"),F(Y.$$.fragment),ge=t(" Global Endpoint Options"),bn=y(),W=i("p"),be=t("You can have a set of common options applied to each endpoint by specifying an action for the "),Ks=i("strong"),ve=t("GlobalEndpointOptions"),_e=t(" property of the configuration."),vn=y(),K=i("p"),we=t("The action you set here will be executed for each endpoint during startup. you can inspect the "),Ls=i("strong"),De=t("EndpointDefinition"),Te=t(" argument to check what the current endpoint is, if needed."),_n=y(),b=i("p"),xe=t("Options to be applied to endpoints are performed on the "),Ms=i("strong"),ze=t("RouteHandlerBuilder"),Se=t(" argument. The action you specify here is executed before "),Vs=i("strong"),ke=t("Options()"),Oe=t(" and "),Qs=i("strong"),qe=t("Description()"),Pe=t(" of each individual endpoint during registration."),wn=y(),L=i("p"),Re=t("Whatever you do here may get overridden or compounded by what you do in the "),Xs=i("strong"),Ne=t("Configure()"),Ge=t(" method of each endpoint."),Dn=y(),F(rs.$$.fragment),O=i("h2"),F(M.$$.fragment),je=t(" Customizing Error Responses"),Tn=y(),bs=i("p"),Ie=t("if the default error response is not to your liking, you can specify a function to produce the exact error response you need. whatever object you return from that function will be serialized to json and sent to the client whenever there needs to be an error response sent downstream. the function will be supplied a collection of validation failures as well as a http status code you can use to construct your own error response object like so:"),xn=y(),F(is.$$.fragment),q=i("h2"),F(V.$$.fragment),He=t(" Customizing De-Serialization Of JSON"),zn=y(),vs=i("p"),Je=t(`If you'd like to take control of how request bodies are deserialized, simply provide a function like the following.
The function is supplied with the incoming HTTP request object, the type of the DTO to be created, JSON Serializer context, and a Cancellation Token.`),Sn=y(),_s=i("p"),Ue=t("Deserialize the object how ever you want and return it from the function. Do note that this function will be used to deserialize all incoming requests with a JSON body. it is currently not possible to specify a deserialization function per endpoint."),kn=y(),ws=i("p"),Ye=t("Input parameters:"),On=y(),F(Bs.$$.fragment),F(cs.$$.fragment),P=i("h2"),F(Q.$$.fragment),We=t(" Customizing Serialization Of Response DTOs"),qn=y(),Ds=i("p"),Ke=t(`The response serialization process can be overridden by specifying a function that returns a Task object.
You should set the content-type on the HTTP response object and write directly to the response body stream.
Do note that this function will be used to serialize all outgoing responses where a JSON body is required.
It is currently not possible to specify a serialization function per endpoint.`),Pn=y(),Ts=i("p"),Le=t("The parameters supplied to the function are as follows:"),Rn=y(),F(ys.$$.fragment),F(fs.$$.fragment),R=i("h2"),F(X.$$.fragment),Me=t(" Source Generator Based Startup Type Discovery"),Nn=y(),xs=i("p"),Ve=t("Reflection based assembly scanning is used by default to discover endpoints, validators, summaries and event handlers."),Gn=y(),zs=i("p"),Qe=t("If your application has many hundreds of these types and it's running in a serverless environment, you may be able to get about a 20% startup speed boost by utilizing our experimental source generator."),jn=y(),Z=i("p"),Xe=t("To enable the source generator, simply install the "),Zs=i("strong"),Ze=t("FastEndpoints.Generator"),so=t(" package from Nuget."),In=y(),Ss=i("p"),sn=i("strong"),no=t("Installation"),Hn=y(),F(us.$$.fragment),ks=i("p"),nn=i("strong"),eo=t("Usage"),Jn=y(),F(ds.$$.fragment),w=i("p"),oo=t("If source generation is not working, make sure you have "),en=i("strong"),ao=t(".NET Compiler Platform SDK"),to=t(" installed in your environment. "),F(ss.$$.fragment),lo=t(" for more info."),this.h()},l(s){r=B(s,"H1",{});var e=c(r);u=l(e,p),e.forEach(n),$s=f(s),T=B(s,"H2",{id:!0,tabindex:!0});var Os=c(T);A(N.$$.fragment,Os),Mn=l(Os," Customizing Functionality"),Os.forEach(n),Bn=f(s),ms=B(s,"P",{});var an=c(ms);Vn=l(an,"There are several areas you can customize/override the default functionality of the library."),an.forEach(n),cn=f(s),G=B(s,"P",{});var Fs=c(G);Qn=l(Fs,"All configuration settings must be specified during app startup with the "),js=B(Fs,"STRONG",{});var tn=c(js);Xn=l(tn,"UseFastEndpoints()"),tn.forEach(n),Zn=l(Fs," call."),Fs.forEach(n),yn=f(s),x=B(s,"H2",{id:!0,tabindex:!0});var qs=c(x);A(j.$$.fragment,qs),se=l(qs," Specify JSON Serializer Options"),qs.forEach(n),fn=f(s),I=B(s,"P",{});var As=c(I);ne=l(As,"The settings for the default json serializer which is "),Is=B(As,"STRONG",{});var ln=c(Is);ee=l(ln,"System.Text.Json"),ln.forEach(n),oe=l(As," can be set like so:"),As.forEach(n),un=f(s),A(es.$$.fragment,s),z=B(s,"H2",{id:!0,tabindex:!0});var Ps=c(z);A(H.$$.fragment,Ps),ae=l(Ps," Global Route Prefix"),Ps.forEach(n),dn=f(s),Es=B(s,"P",{});var pn=c(Es);te=l(pn,"You can have a specified string automatically prepended to all route names in your app instead of repeating it in each and every route config method by specifying the prefix at app startup."),pn.forEach(n),Fn=f(s),A(os.$$.fragment,s),Cs=B(s,"P",{});var rn=c(Cs);le=l(rn,"For example, the following route config methods would result in the below endpoint routes:"),rn.forEach(n),An=f(s),A(as.$$.fragment,s),hs=B(s,"P",{});var fo=c(hs);pe=l(fo,"If needed, you can override or disable the global prefix from within individual endpoints like so:"),fo.forEach(n),$n=f(s),A(ts.$$.fragment,s),v=B(s,"P",{});var Rs=c(v);re=l(Rs,"In order to disable the global prefix, simply pass in a "),Hs=B(Rs,"STRONG",{});var uo=c(Hs);ie=l(uo,"string.Empty"),uo.forEach(n),Be=l(Rs," to the "),Js=B(Rs,"STRONG",{});var Fo=c(Js);ce=l(Fo,"RoutePrefixOverride()"),Fo.forEach(n),ye=l(Rs," method."),Rs.forEach(n),mn=f(s),S=B(s,"H2",{id:!0,tabindex:!0});var po=c(S);A(J.$$.fragment,po),fe=l(po," Filtering Endpoint Auto Registration"),po.forEach(n),En=f(s),gs=B(s,"P",{});var Ao=c(gs);ue=l(Ao,"If you'd like to prevent some of the endpoints in your project to be not auto registered during startup, you have the option to supply a filtering function which will be run against each discovered endpoint."),Ao.forEach(n),Cn=f(s),_=B(s,"P",{});var Ns=c(_);de=l(Ns,"If your function returns "),Us=B(Ns,"STRONG",{});var $o=c(Us);Fe=l($o,"true"),$o.forEach(n),Ae=l(Ns,", that particular endpoint will be registered. If the function returns "),Ys=B(Ns,"STRONG",{});var mo=c(Ys);$e=l(mo,"false"),mo.forEach(n),me=l(Ns," that endpoint will be ignored and not registered."),Ns.forEach(n),hn=f(s),A(ls.$$.fragment,s),U=B(s,"P",{});var Un=c(U);Ee=l(Un,"It is also possible to set a "),Ws=B(Un,"STRONG",{});var Eo=c(Ws);Ce=l(Eo,"Tag"),Eo.forEach(n),he=l(Un," for an endpoint and use that tag to filter out endpoints according to tags during registration as shown below:"),Un.forEach(n),gn=f(s),A(ps.$$.fragment,s),k=B(s,"H2",{id:!0,tabindex:!0});var ro=c(k);A(Y.$$.fragment,ro),ge=l(ro," Global Endpoint Options"),ro.forEach(n),bn=f(s),W=B(s,"P",{});var Yn=c(W);be=l(Yn,"You can have a set of common options applied to each endpoint by specifying an action for the "),Ks=B(Yn,"STRONG",{});var Co=c(Ks);ve=l(Co,"GlobalEndpointOptions"),Co.forEach(n),_e=l(Yn," property of the configuration."),Yn.forEach(n),vn=f(s),K=B(s,"P",{});var Wn=c(K);we=l(Wn,"The action you set here will be executed for each endpoint during startup. you can inspect the "),Ls=B(Wn,"STRONG",{});var ho=c(Ls);De=l(ho,"EndpointDefinition"),ho.forEach(n),Te=l(Wn," argument to check what the current endpoint is, if needed."),Wn.forEach(n),_n=f(s),b=B(s,"P",{});var ns=c(b);xe=l(ns,"Options to be applied to endpoints are performed on the "),Ms=B(ns,"STRONG",{});var go=c(Ms);ze=l(go,"RouteHandlerBuilder"),go.forEach(n),Se=l(ns," argument. The action you specify here is executed before "),Vs=B(ns,"STRONG",{});var bo=c(Vs);ke=l(bo,"Options()"),bo.forEach(n),Oe=l(ns," and "),Qs=B(ns,"STRONG",{});var vo=c(Qs);qe=l(vo,"Description()"),vo.forEach(n),Pe=l(ns," of each individual endpoint during registration."),ns.forEach(n),wn=f(s),L=B(s,"P",{});var Kn=c(L);Re=l(Kn,"Whatever you do here may get overridden or compounded by what you do in the "),Xs=B(Kn,"STRONG",{});var _o=c(Xs);Ne=l(_o,"Configure()"),_o.forEach(n),Ge=l(Kn," method of each endpoint."),Kn.forEach(n),Dn=f(s),A(rs.$$.fragment,s),O=B(s,"H2",{id:!0,tabindex:!0});var io=c(O);A(M.$$.fragment,io),je=l(io," Customizing Error Responses"),io.forEach(n),Tn=f(s),bs=B(s,"P",{});var wo=c(bs);Ie=l(wo,"if the default error response is not to your liking, you can specify a function to produce the exact error response you need. whatever object you return from that function will be serialized to json and sent to the client whenever there needs to be an error response sent downstream. the function will be supplied a collection of validation failures as well as a http status code you can use to construct your own error response object like so:"),wo.forEach(n),xn=f(s),A(is.$$.fragment,s),q=B(s,"H2",{id:!0,tabindex:!0});var Bo=c(q);A(V.$$.fragment,Bo),He=l(Bo," Customizing De-Serialization Of JSON"),Bo.forEach(n),zn=f(s),vs=B(s,"P",{});var Do=c(vs);Je=l(Do,`If you'd like to take control of how request bodies are deserialized, simply provide a function like the following.
The function is supplied with the incoming HTTP request object, the type of the DTO to be created, JSON Serializer context, and a Cancellation Token.`),Do.forEach(n),Sn=f(s),_s=B(s,"P",{});var To=c(_s);Ue=l(To,"Deserialize the object how ever you want and return it from the function. Do note that this function will be used to deserialize all incoming requests with a JSON body. it is currently not possible to specify a deserialization function per endpoint."),To.forEach(n),kn=f(s),ws=B(s,"P",{});var xo=c(ws);Ye=l(xo,"Input parameters:"),xo.forEach(n),On=f(s),A(Bs.$$.fragment,s),A(cs.$$.fragment,s),P=B(s,"H2",{id:!0,tabindex:!0});var co=c(P);A(Q.$$.fragment,co),We=l(co," Customizing Serialization Of Response DTOs"),co.forEach(n),qn=f(s),Ds=B(s,"P",{});var zo=c(Ds);Ke=l(zo,`The response serialization process can be overridden by specifying a function that returns a Task object.
You should set the content-type on the HTTP response object and write directly to the response body stream.
Do note that this function will be used to serialize all outgoing responses where a JSON body is required.
It is currently not possible to specify a serialization function per endpoint.`),zo.forEach(n),Pn=f(s),Ts=B(s,"P",{});var So=c(Ts);Le=l(So,"The parameters supplied to the function are as follows:"),So.forEach(n),Rn=f(s),A(ys.$$.fragment,s),A(fs.$$.fragment,s),R=B(s,"H2",{id:!0,tabindex:!0});var yo=c(R);A(X.$$.fragment,yo),Me=l(yo," Source Generator Based Startup Type Discovery"),yo.forEach(n),Nn=f(s),xs=B(s,"P",{});var ko=c(xs);Ve=l(ko,"Reflection based assembly scanning is used by default to discover endpoints, validators, summaries and event handlers."),ko.forEach(n),Gn=f(s),zs=B(s,"P",{});var Oo=c(zs);Qe=l(Oo,"If your application has many hundreds of these types and it's running in a serverless environment, you may be able to get about a 20% startup speed boost by utilizing our experimental source generator."),Oo.forEach(n),jn=f(s),Z=B(s,"P",{});var Ln=c(Z);Xe=l(Ln,"To enable the source generator, simply install the "),Zs=B(Ln,"STRONG",{});var qo=c(Zs);Ze=l(qo,"FastEndpoints.Generator"),qo.forEach(n),so=l(Ln," package from Nuget."),Ln.forEach(n),In=f(s),Ss=B(s,"P",{});var Po=c(Ss);sn=B(Po,"STRONG",{});var Ro=c(sn);no=l(Ro,"Installation"),Ro.forEach(n),Po.forEach(n),Hn=f(s),A(us.$$.fragment,s),ks=B(s,"P",{});var No=c(ks);nn=B(No,"STRONG",{});var Go=c(nn);eo=l(Go,"Usage"),Go.forEach(n),No.forEach(n),Jn=f(s),A(ds.$$.fragment,s),w=B(s,"P",{});var Gs=c(w);oo=l(Gs,"If source generation is not working, make sure you have "),en=B(Gs,"STRONG",{});var jo=c(en);ao=l(jo,".NET Compiler Platform SDK"),jo.forEach(n),to=l(Gs," installed in your environment. "),A(ss.$$.fragment,Gs),lo=l(Gs," for more info."),Gs.forEach(n),this.h()},h(){h(T,"id","customizing-functionality"),h(T,"tabindex","-1"),h(x,"id","specify-json-serializer-options"),h(x,"tabindex","-1"),h(z,"id","global-route-prefix"),h(z,"tabindex","-1"),h(S,"id","filtering-endpoint-auto-registration"),h(S,"tabindex","-1"),h(k,"id","global-endpoint-options"),h(k,"tabindex","-1"),h(O,"id","customizing-error-responses"),h(O,"tabindex","-1"),h(q,"id","customizing-de-serialization-of-json"),h(q,"tabindex","-1"),h(P,"id","customizing-serialization-of-response-dtos"),h(P,"tabindex","-1"),h(R,"id","source-generator-based-startup-type-discovery"),h(R,"tabindex","-1")},m(s,e){a(s,r,e),o(r,u),a(s,$s,e),a(s,T,e),$(N,T,null),o(T,Mn),a(s,Bn,e),a(s,ms,e),o(ms,Vn),a(s,cn,e),a(s,G,e),o(G,Qn),o(G,js),o(js,Xn),o(G,Zn),a(s,yn,e),a(s,x,e),$(j,x,null),o(x,se),a(s,fn,e),a(s,I,e),o(I,ne),o(I,Is),o(Is,ee),o(I,oe),a(s,un,e),$(es,s,e),a(s,z,e),$(H,z,null),o(z,ae),a(s,dn,e),a(s,Es,e),o(Es,te),a(s,Fn,e),$(os,s,e),a(s,Cs,e),o(Cs,le),a(s,An,e),$(as,s,e),a(s,hs,e),o(hs,pe),a(s,$n,e),$(ts,s,e),a(s,v,e),o(v,re),o(v,Hs),o(Hs,ie),o(v,Be),o(v,Js),o(Js,ce),o(v,ye),a(s,mn,e),a(s,S,e),$(J,S,null),o(S,fe),a(s,En,e),a(s,gs,e),o(gs,ue),a(s,Cn,e),a(s,_,e),o(_,de),o(_,Us),o(Us,Fe),o(_,Ae),o(_,Ys),o(Ys,$e),o(_,me),a(s,hn,e),$(ls,s,e),a(s,U,e),o(U,Ee),o(U,Ws),o(Ws,Ce),o(U,he),a(s,gn,e),$(ps,s,e),a(s,k,e),$(Y,k,null),o(k,ge),a(s,bn,e),a(s,W,e),o(W,be),o(W,Ks),o(Ks,ve),o(W,_e),a(s,vn,e),a(s,K,e),o(K,we),o(K,Ls),o(Ls,De),o(K,Te),a(s,_n,e),a(s,b,e),o(b,xe),o(b,Ms),o(Ms,ze),o(b,Se),o(b,Vs),o(Vs,ke),o(b,Oe),o(b,Qs),o(Qs,qe),o(b,Pe),a(s,wn,e),a(s,L,e),o(L,Re),o(L,Xs),o(Xs,Ne),o(L,Ge),a(s,Dn,e),$(rs,s,e),a(s,O,e),$(M,O,null),o(O,je),a(s,Tn,e),a(s,bs,e),o(bs,Ie),a(s,xn,e),$(is,s,e),a(s,q,e),$(V,q,null),o(q,He),a(s,zn,e),a(s,vs,e),o(vs,Je),a(s,Sn,e),a(s,_s,e),o(_s,Ue),a(s,kn,e),a(s,ws,e),o(ws,Ye),a(s,On,e),$(Bs,s,e),$(cs,s,e),a(s,P,e),$(Q,P,null),o(P,We),a(s,qn,e),a(s,Ds,e),o(Ds,Ke),a(s,Pn,e),a(s,Ts,e),o(Ts,Le),a(s,Rn,e),$(ys,s,e),$(fs,s,e),a(s,R,e),$(X,R,null),o(R,Me),a(s,Nn,e),a(s,xs,e),o(xs,Ve),a(s,Gn,e),a(s,zs,e),o(zs,Qe),a(s,jn,e),a(s,Z,e),o(Z,Xe),o(Z,Zs),o(Zs,Ze),o(Z,so),a(s,In,e),a(s,Ss,e),o(Ss,sn),o(sn,no),a(s,Hn,e),$(us,s,e),a(s,ks,e),o(ks,nn),o(nn,eo),a(s,Jn,e),$(ds,s,e),a(s,w,e),o(w,oo),o(w,en),o(en,ao),o(w,to),$(ss,w,null),o(w,lo),on=!0},p(s,[e]){(!on||e&1)&&p!==(p=s[0].title+"")&&Uo(u,p);const Os={};e&2&&(Os.$$scope={dirty:e,ctx:s}),N.$set(Os);const an={};e&2&&(an.$$scope={dirty:e,ctx:s}),j.$set(an);const Fs={};e&2&&(Fs.$$scope={dirty:e,ctx:s}),H.$set(Fs);const tn={};e&2&&(tn.$$scope={dirty:e,ctx:s}),J.$set(tn);const qs={};e&2&&(qs.$$scope={dirty:e,ctx:s}),Y.$set(qs);const As={};e&2&&(As.$$scope={dirty:e,ctx:s}),M.$set(As);const ln={};e&2&&(ln.$$scope={dirty:e,ctx:s}),V.$set(ln);const Ps={};e&2&&(Ps.$$scope={dirty:e,ctx:s}),Q.$set(Ps);const pn={};e&2&&(pn.$$scope={dirty:e,ctx:s}),X.$set(pn);const rn={};e&2&&(rn.$$scope={dirty:e,ctx:s}),ss.$set(rn)},i(s){on||(m(N.$$.fragment,s),m(j.$$.fragment,s),m(es.$$.fragment,s),m(H.$$.fragment,s),m(os.$$.fragment,s),m(as.$$.fragment,s),m(ts.$$.fragment,s),m(J.$$.fragment,s),m(ls.$$.fragment,s),m(ps.$$.fragment,s),m(Y.$$.fragment,s),m(rs.$$.fragment,s),m(M.$$.fragment,s),m(is.$$.fragment,s),m(V.$$.fragment,s),m(Bs.$$.fragment,s),m(cs.$$.fragment,s),m(Q.$$.fragment,s),m(ys.$$.fragment,s),m(fs.$$.fragment,s),m(X.$$.fragment,s),m(us.$$.fragment,s),m(ds.$$.fragment,s),m(ss.$$.fragment,s),on=!0)},o(s){E(N.$$.fragment,s),E(j.$$.fragment,s),E(es.$$.fragment,s),E(H.$$.fragment,s),E(os.$$.fragment,s),E(as.$$.fragment,s),E(ts.$$.fragment,s),E(J.$$.fragment,s),E(ls.$$.fragment,s),E(ps.$$.fragment,s),E(Y.$$.fragment,s),E(rs.$$.fragment,s),E(M.$$.fragment,s),E(is.$$.fragment,s),E(V.$$.fragment,s),E(Bs.$$.fragment,s),E(cs.$$.fragment,s),E(Q.$$.fragment,s),E(ys.$$.fragment,s),E(fs.$$.fragment,s),E(X.$$.fragment,s),E(us.$$.fragment,s),E(ds.$$.fragment,s),E(ss.$$.fragment,s),on=!1},d(s){s&&n(r),s&&n($s),s&&n(T),C(N),s&&n(Bn),s&&n(ms),s&&n(cn),s&&n(G),s&&n(yn),s&&n(x),C(j),s&&n(fn),s&&n(I),s&&n(un),C(es,s),s&&n(z),C(H),s&&n(dn),s&&n(Es),s&&n(Fn),C(os,s),s&&n(Cs),s&&n(An),C(as,s),s&&n(hs),s&&n($n),C(ts,s),s&&n(v),s&&n(mn),s&&n(S),C(J),s&&n(En),s&&n(gs),s&&n(Cn),s&&n(_),s&&n(hn),C(ls,s),s&&n(U),s&&n(gn),C(ps,s),s&&n(k),C(Y),s&&n(bn),s&&n(W),s&&n(vn),s&&n(K),s&&n(_n),s&&n(b),s&&n(wn),s&&n(L),s&&n(Dn),C(rs,s),s&&n(O),C(M),s&&n(Tn),s&&n(bs),s&&n(xn),C(is,s),s&&n(q),C(V),s&&n(zn),s&&n(vs),s&&n(Sn),s&&n(_s),s&&n(kn),s&&n(ws),s&&n(On),C(Bs,s),C(cs,s),s&&n(P),C(Q),s&&n(qn),s&&n(Ds),s&&n(Pn),s&&n(Ts),s&&n(Rn),C(ys,s),C(fs,s),s&&n(R),C(X),s&&n(Nn),s&&n(xs),s&&n(Gn),s&&n(zs),s&&n(jn),s&&n(Z),s&&n(In),s&&n(Ss),s&&n(Hn),C(us,s),s&&n(ks),s&&n(Jn),C(ds,s),s&&n(w),C(ss)}}}function aa(d,r,p){let u;return Yo(d,Wo,$s=>p(0,u=$s)),[u]}class ca extends Io{constructor(r){super(),Ho(this,r,aa,oa,Jo,{})}}export{ca as default};
