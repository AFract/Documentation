import{S as kp,i as xp,s as Op,l as B,r as o,a as i,w as A,m as c,n as y,u as l,h as n,c as u,x as m,p as C,b as p,M as a,y as d,v as Gp,f as g,t as $,B as E,_ as Ip,E as Np}from"../../chunks/index-98cfa7ad.js";import{f as Mp}from"../../chunks/scroll-1be19199.js";import{C as h}from"../../chunks/CodeFence-182ee1eb.js";import{L as v}from"../../chunks/Link-76ffd583.js";import{A as Rp}from"../../chunks/Admonition-d261edcb.js";import"../../chunks/singletons-9aa31187.js";import"../../chunks/contexts-ec7bfa4f.js";function Wp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function jp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Jp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function zp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Hp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Up(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Lp(f){let r,t;return{c(){r=B("p"),t=o("If you can figure out how to get NSwag to read the XML summary/remarks tags from the endpoint classes, please submit a PR on Github.")},l(F){r=c(F,"P",{});var D=y(r);t=l(D,"If you can figure out how to get NSwag to read the XML summary/remarks tags from the endpoint classes, please submit a PR on Github."),D.forEach(n)},m(F,D){p(F,r,D),a(r,t)},p:Np,d(F){F&&n(r)}}}function Qp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Xp(f){let r;return{c(){r=o("query parameter will be added")},l(t){r=l(t,"query parameter will be added")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Vp(f){let r;return{c(){r=o("model binding order")},l(t){r=l(t,"model binding order")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Yp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Kp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function Zp(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function st(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function nt(f){let r;return{c(){r=o("#")},l(t){r=l(t,"#")},m(t,F){p(t,r,F)},d(t){t&&n(r)}}}function at(f){let r,t,F,D,_;return{c(){r=B("p"),t=o("When you manually specify a name for an endpoint like above and you want to point to that endpoint when using "),F=B("strong"),D=o("SendCreatedAtAsync()"),_=o(" method, you must use the overload that takes a string argument with which you can specify the name of the target endpoint. i.e. you lose the convenience/type-safety of being able to simply point to another endpoint using the class type like so:")},l(I){r=c(I,"P",{});var S=y(r);t=l(S,"When you manually specify a name for an endpoint like above and you want to point to that endpoint when using "),F=c(S,"STRONG",{});var sn=y(F);D=l(sn,"SendCreatedAtAsync()"),sn.forEach(n),_=l(S," method, you must use the overload that takes a string argument with which you can specify the name of the target endpoint. i.e. you lose the convenience/type-safety of being able to simply point to another endpoint using the class type like so:"),S.forEach(n)},m(I,S){p(I,r,S),a(r,t),a(r,F),a(F,D),a(r,_)},p:Np,d(I){I&&n(r)}}}function et(f){let r,t=f[0].title+"",F,D,_,I,S,sn,$e,fa,nn,Ee,Aa,M,ss,Ce,ma,ns,he,An,we,De,da,an,mn,be,ga,Ts,en,dn,ve,$a,Rs,R,_e,gn,Se,qe,$n,Pe,Te,Ea,W,as,Re,Ca,es,Ne,En,ke,xe,ha,Ns,j,os,Oe,wa,N,Ge,Cn,Ie,Me,hn,We,je,Da,ls,Je,wn,ze,He,ba,ks,b,Ue,Dn,Le,Qe,bn,Xe,Ve,vn,Ye,Ke,_n,Ze,so,va,xs,J,ps,no,_a,ts,ao,Sn,eo,oo,Sa,Os,rs,lo,qn,po,to,qa,Gs,k,ro,Pn,Bo,co,Tn,yo,io,Pa,Is,w,uo,Rn,Fo,fo,Nn,Ao,mo,kn,go,$o,xn,Eo,Co,On,ho,wo,Ta,z,Bs,Do,Ra,q,bo,Gn,vo,_o,In,So,qo,Mn,Po,To,Na,on,Ro,ka,Ms,Ws,cs,No,Wn,ko,xo,xa,ys,Oo,jn,Go,Io,Oa,H,Jn,Mo,Wo,zn,jo,Jo,Ga,is,zo,Hn,Ho,Uo,Ia,U,us,Lo,Ma,Fs,Qo,Un,Xo,Vo,Wa,js,fs,ja,L,As,Yo,Ja,ms,Ko,Ln,Zo,sl,za,x,nl,Qn,al,el,ds,ol,Ha,Js,O,ll,Xn,pl,tl,gs,rl,Ua,ln,Bl,La,Q,$s,cl,Qa,Es,yl,Vn,il,ul,Xa,zs,X,Cs,Fl,Va,hs,fl,Yn,Al,ml,Ya,Hs,V,ws,dl,Ka,Ds,gl,Kn,$l,El,Za,Us,P,Cl,Zn,hl,wl,sa,Dl,bl,na,vl,_l,se,Y,bs,Sl,ne,pn,ql,ae,tn,Pl,ee,Ls,K,vs,Tl,oe,_s,Rl,aa,Nl,kl,le,Qs,Ss,pe,Xs,rn,xl,te,Vs,ea;return ss=new v({props:{class:"header-anchor",href:"#enable-swagger","aria-hidden":"true",$$slots:{default:[Wp]},$$scope:{ctx:f}}}),Ts=new h({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`dotnet add package FastEndpoints.Swagger
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #ABB2BF">dotnet add package FastEndpoints.Swagger</span></span>
<span class="line"></span></code></pre>`}}),Rs=new h({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:14,code:`<pre><code><span class="line"><span style="color: #E06C75">global</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">FastEndpoints</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">FastEndpoints</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Swagger</span><span style="color: #ABB2BF">; </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">builder</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">WebApplication</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">CreateBuilder</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddSwaggerDoc</span><span style="color: #ABB2BF">(); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">app</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Build</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseAuthorization</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseOpenApi</span><span style="color: #ABB2BF">(); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseSwaggerUi3</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">ConfigureDefaults</span><span style="color: #ABB2BF">()); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Run</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span></code></pre>`}}),as=new v({props:{class:"header-anchor",href:"#configuration","aria-hidden":"true",$$slots:{default:[jp]},$$scope:{ctx:f}}}),Ns=new h({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddSwaggerDoc</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">settings</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">settings</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Title</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;My API&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">settings</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Version</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;v1&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),os=new v({props:{class:"header-anchor",href:"#describe-endpoints","aria-hidden":"true",$$slots:{default:[Jp]},$$scope:{ctx:f}}}),ks=new h({props:{lang:"csharp",ext:"cs",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyRequest</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">MyResponse</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/admin/login&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Description</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">b</span></span>
<span class="line"><span style="color: #ABB2BF">          .</span><span style="color: #61AFEF">Produces</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">ErrorResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">400</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;application/json+problem&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">          .</span><span style="color: #61AFEF">ProducesProblem</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">));</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),xs=new h({props:{lang:"csharp",ext:"cs",linesCount:14,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/admin/login&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Description</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E06C75">b</span></span>
<span class="line"><span style="color: #ABB2BF">        .</span><span style="color: #61AFEF">Accepts</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyRequest</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #98C379">&quot;application/json+custom&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        .</span><span style="color: #61AFEF">Produces</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">200</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;application/json+custom&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        .</span><span style="color: #61AFEF">Produces</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">ErrorResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">400</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;application/json+problem&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        .</span><span style="color: #61AFEF">ProducesProblem</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">),</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">clearDefaults</span><span style="color: #ABB2BF">: </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),ps=new v({props:{class:"header-anchor",href:"#swagger-documentation","aria-hidden":"true",$$slots:{default:[zp]},$$scope:{ctx:f}}}),Os=new h({props:{lang:"csharp",ext:"cs",linesCount:17,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/admin/login&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Description</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">ProducesProblem</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Summary</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF"> =&gt; {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Summary</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;short summary goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Description</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;long description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ExampleRequest</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyRequest</span><span style="color: #ABB2BF"> { ... };</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Responses</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">200</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;success response description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Responses</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;forbidden response description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    });</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Gs=new h({props:{lang:"csharp",ext:"cs",linesCount:23,code:`<pre><code><span class="line"><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">AdminLoginSummary</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">EndpointSummary</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">AdminLoginSummary</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Summary</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;short summary goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Description</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;long description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">ExampleRequest</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyRequest</span><span style="color: #ABB2BF"> { ... };</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">Responses</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">200</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;success response description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">Responses</span><span style="color: #ABB2BF">[</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;forbidden response description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/admin/login&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Description</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">b</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">ProducesProblem</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">403</span><span style="color: #ABB2BF">));</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Summary</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">AdminLoginSummary</span><span style="color: #ABB2BF">());</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Is=new h({props:{lang:"csharp",ext:"cs",linesCount:28,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MySummary</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Summary</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyEndpoint</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">MySummary</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Summary</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;short summary goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Description</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;long description goes here&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">ExampleRequest</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyRequest</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #7F848E; font-style: italic">// Code</span></span>
<span class="line"><span style="color: #ABB2BF">        };</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Response</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">200</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;ok response with body&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Response</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">ErrorResponse</span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">400</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;validation failure&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Response</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">404</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;account not found&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">MyEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">MyRequest</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">MyResponse</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/my-endpoint&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #7F848E; font-style: italic">//no need to specify summary here</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Bs=new v({props:{class:"header-anchor",href:"#describe-request-params","aria-hidden":"true",$$slots:{default:[Hp]},$$scope:{ctx:f}}}),Ms=new h({props:{title:"Request.cs",lang:"csharp",ext:"cs",linesCount:16,code:`<pre><code><span class="line"><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">/// the admin login request summary</span></span>
<span class="line"><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;/</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Request</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// username field description</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;/</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF"> UserName { </span><span style="color: #C678DD">get</span><span style="color: #ABB2BF">; </span><span style="color: #C678DD">set</span><span style="color: #ABB2BF">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// password field description</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #7F848E; font-style: italic">/// </span><span style="color: #ABB2BF; font-style: italic">&lt;/</span><span style="color: #E06C75; font-style: italic">summary</span><span style="color: #ABB2BF; font-style: italic">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF"> Password { </span><span style="color: #C678DD">get</span><span style="color: #ABB2BF">; </span><span style="color: #C678DD">set</span><span style="color: #ABB2BF">; }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Ws=new h({props:{title:"Endpoint.cs",lang:"csharp",ext:"cs",linesCount:15,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;admin/login/{ClientID?}&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Summary</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Summary</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;summary&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Description</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;description&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Params</span><span style="color: #ABB2BF">[</span><span style="color: #98C379">&quot;ClientID&quot;</span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;client id description&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">RequestParam</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">r</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">r</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">UserName</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;overriden username description&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    });</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),us=new v({props:{class:"header-anchor",href:"#enabling-xml-documentation","aria-hidden":"true",$$slots:{default:[Up]},$$scope:{ctx:f}}}),js=new h({props:{title:"Project.csproj",lang:"xml",ext:"xml",linesCount:5,code:`<pre><code><span class="line"><span style="color: #ABB2BF">&lt;</span><span style="color: #E06C75">PropertyGroup</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    &lt;</span><span style="color: #E06C75">GenerateDocumentationFile</span><span style="color: #ABB2BF">&gt;true&lt;/</span><span style="color: #E06C75">GenerateDocumentationFile</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">    &lt;</span><span style="color: #E06C75">NoWarn</span><span style="color: #ABB2BF">&gt;CS1591&lt;/</span><span style="color: #E06C75">NoWarn</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">&lt;/</span><span style="color: #E06C75">PropertyGroup</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"></span></code></pre>`}}),fs=new Rp({props:{type:"warning",$$slots:{default:[Lp]},$$scope:{ctx:f}}}),As=new v({props:{class:"header-anchor",href:"#adding-query-params-to-swagger-document","aria-hidden":"true",$$slots:{default:[Qp]},$$scope:{ctx:f}}}),ds=new v({props:{href:"https://fast-endpoints.com/images/swagger-queryparam.png",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Xp]},$$scope:{ctx:f}}}),Js=new h({props:{title:"CreateEmployeeRequest.cs",lang:"csharp",ext:"cs",linesCount:11,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">CreateEmployeeRequest</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    [</span><span style="color: #E5C07B">QueryParam</span><span style="color: #ABB2BF">]</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF"> Name { </span><span style="color: #C678DD">get</span><span style="color: #ABB2BF">; </span><span style="color: #C678DD">set</span><span style="color: #ABB2BF">; } </span><span style="color: #7F848E; font-style: italic">// bound from query string</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    [</span><span style="color: #E5C07B">QueryParam</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">BindFrom</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;id&quot;</span><span style="color: #ABB2BF">)]</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">string</span><span style="color: #ABB2BF">? ID { </span><span style="color: #C678DD">get</span><span style="color: #ABB2BF">; </span><span style="color: #C678DD">set</span><span style="color: #ABB2BF">; } </span><span style="color: #7F848E; font-style: italic">// bound from query string</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Address</span><span style="color: #ABB2BF"> Address { </span><span style="color: #C678DD">get</span><span style="color: #ABB2BF">; </span><span style="color: #C678DD">set</span><span style="color: #ABB2BF">; } </span><span style="color: #7F848E; font-style: italic">// bound from body</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),gs=new v({props:{href:"/docs/model-binding",$$slots:{default:[Vp]},$$scope:{ctx:f}}}),$s=new v({props:{class:"header-anchor",href:"#disable-jwt-auth-scheme","aria-hidden":"true",$$slots:{default:[Yp]},$$scope:{ctx:f}}}),zs=new h({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:2,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddSwaggerDoc</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">addJWTBearerAuth</span><span style="color: #ABB2BF">: </span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">);</span></span>
<span class="line"></span></code></pre>`}}),Cs=new v({props:{class:"header-anchor",href:"#multiple-authentication-schemes","aria-hidden":"true",$$slots:{default:[Kp]},$$scope:{ctx:f}}}),Hs=new h({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:19,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddSwaggerDoc</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">DocumentName</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;Release 1.0&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Title</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;Web API&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Version</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;v1.0&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddAuth</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;ApiKey&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Name</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;api_key&quot;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">In</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">OpenApiSecurityApiKeyLocation</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Header</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Type</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">OpenApiSecuritySchemeType</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ApiKey</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    });</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">s</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddAuth</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Bearer&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #61AFEF">new</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Type</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">OpenApiSecuritySchemeType</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">Scheme</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;Bearer&quot;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #E06C75">BearerFormat</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;JWT&quot;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">    });</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),ws=new v({props:{class:"header-anchor",href:"#swagger-serializer-options","aria-hidden":"true",$$slots:{default:[Zp]},$$scope:{ctx:f}}}),Us=new h({props:{lang:"csharp",ext:"cs",linesCount:7,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddSwaggerDoc</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">serializerSettings</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PropertyNamingPolicy</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">null</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">DefaultIgnoreCondition</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">JsonIgnoreCondition</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">WhenWritingNull</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    ...</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),bs=new v({props:{class:"header-anchor",href:"#customize-endpoint-name-swagger-operation-id","aria-hidden":"true",$$slots:{default:[st]},$$scope:{ctx:f}}}),Ls=new h({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:5,code:`<pre><code><span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">c</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">ShortEndpointNames</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),vs=new v({props:{class:"header-anchor",href:"#custom-endpoint-names","aria-hidden":"true",$$slots:{default:[nt]},$$scope:{ctx:f}}}),Qs=new h({props:{title:"Endpoint.cs",lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Get</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/sales/invoice/{InvoiceID}&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Description</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">WithName</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;GetInvoice&quot;</span><span style="color: #ABB2BF">));</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Ss=new Rp({props:{type:"info",$$slots:{default:[at]},$$scope:{ctx:f}}}),Xs=new h({props:{lang:"csharp",ext:"cs",linesCount:2,code:`<pre><code><span class="line"><span style="color: #E5C07B">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">SendCreatedAtAsync</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">GetInvoiceEndpoint</span><span style="color: #ABB2BF">&gt;(...);</span></span>
<span class="line"></span></code></pre>`}}),Vs=new h({props:{lang:"csharp",ext:"cs",linesCount:2,code:`<pre><code><span class="line"><span style="color: #E5C07B">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">SendCreatedAtAsync</span><span style="color: #ABB2BF">(&quot;GetInvoice&quot;, ...);</span></span>
<span class="line"></span></code></pre>`}}),{c(){r=B("h1"),F=o(t),D=i(),_=B("p"),I=o("Swagger support is provided via the excellent "),S=B("strong"),sn=o("NSwag"),$e=o(" library. your mileage may vary since NSwag is presently tied closely to the MVC framework and support for .NET 6 Minimal API is lacking in some areas."),fa=i(),nn=B("p"),Ee=o("If you find some rough edges with the Swagger support in FastEndpoints, please get in touch by creating a github issue or submit a pull request if you have experience dealing with Swagger."),Aa=i(),M=B("h2"),A(ss.$$.fragment),Ce=o(" Enable Swagger"),ma=i(),ns=B("p"),he=o("First install the "),An=B("strong"),we=o("FastEndpoints.Swagger"),De=o(" package and add 4 lines to your app startup:"),da=i(),an=B("p"),mn=B("strong"),be=o("Installation:"),ga=i(),A(Ts.$$.fragment),en=B("p"),dn=B("strong"),ve=o("Usage:"),$a=i(),A(Rs.$$.fragment),R=B("p"),_e=o("You can then visit "),gn=B("strong"),Se=o("/swagger"),qe=o(" or "),$n=B("strong"),Pe=o("/swagger/v1/swagger.json"),Te=o(" to see Swagger output."),Ea=i(),W=B("h2"),A(as.$$.fragment),Re=o(" Configuration"),Ca=i(),es=B("p"),Ne=o("Swagger options can be configured as you'd typically do via the "),En=B("strong"),ke=o("AddSwaggerDoc()"),xe=o(" method:"),ha=i(),A(Ns.$$.fragment),j=B("h2"),A(os.$$.fragment),Oe=o(" Describe Endpoints"),wa=i(),N=B("p"),Ge=o("By default, both "),Cn=B("strong"),Ie=o("Accepts"),Me=o(" and "),hn=B("strong"),We=o("Produces"),je=o(" metadata are inferred from the request/response DTO types of your endpoints and added to the Swagger document automatically."),Da=i(),ls=B("p"),Je=o("So you only need to specify the additional accepts/produces metadata using the "),wn=B("strong"),ze=o("Description()"),He=o(" method like so:"),ba=i(),A(ks.$$.fragment),b=B("p"),Ue=o("If the default "),Dn=B("strong"),Le=o("Accepts"),Qe=o(" & "),bn=B("strong"),Xe=o("Produces"),Ve=o(" are not to your liking, you can clear the defaults and do it all yourself by setting the "),vn=B("strong"),Ye=o("clearDefaults"),Ke=o(" argument to "),_n=B("strong"),Ze=o("true"),so=o(":"),va=i(),A(xs.$$.fragment),J=B("h2"),A(ps.$$.fragment),no=o(" Swagger Documentation"),_a=i(),ts=B("p"),ao=o("Summary & description text, the different responses the endpoint returns, as well as an example request object can be specified with the "),Sn=B("strong"),eo=o("Summary()"),oo=o(" method:"),Sa=i(),A(Os.$$.fragment),rs=B("p"),lo=o("If you prefer to move the summary text out of the endpoint class, you can do so by subclassing the "),qn=B("strong"),po=o("EndpointSummary"),to=o(" type:"),qa=i(),A(Gs.$$.fragment),k=B("p"),ro=o("Alternatively, if you'd like to get rid of all traces of "),Pn=B("strong"),Bo=o("Summary()"),co=o(" from your endpoint classes and have the summary completely separated, you can implement the "),Tn=B("strong"),yo=o("Summary<TEndpoint>"),io=o(" abstract class like shown below:"),Pa=i(),A(Is.$$.fragment),w=B("p"),uo=o("The "),Rn=B("strong"),Fo=o("Response()"),fo=o(" method does the same job as the "),Nn=B("strong"),Ao=o("Produces()"),mo=o(" method mentioned earlier. do note however, if you use the "),kn=B("strong"),go=o("Response()"),$o=o(" method, the default "),xn=B("strong"),Eo=o("200"),Co=o(" response is automatically removed, and you'd have to specify the "),On=B("strong"),ho=o("200"),wo=o(" response yourself if it applies to your endpoint."),Ta=i(),z=B("h2"),A(Bs.$$.fragment),Do=o(" Describe Request Params"),Ra=i(),q=B("p"),bo=o("Route parameters, Query parameters and Request DTO property descriptions can be specified either with xml comments or with the "),Gn=B("strong"),vo=o("Summary()"),_o=o(" method or "),In=B("strong"),So=o("EndpointSummary"),qo=o(" or "),Mn=B("strong"),Po=o("Summary<TEndpoint,TRequest>"),To=o(" subclassing."),Na=i(),on=B("p"),Ro=o("Take the following for example:"),ka=i(),A(Ms.$$.fragment),A(Ws.$$.fragment),cs=B("p"),No=o("Use the "),Wn=B("strong"),ko=o("s.Params"),xo=o(" dictionary to specify descriptions for params that don't exist on the request dto or when there is no request DTO."),xa=i(),ys=B("p"),Oo=o("Use the "),jn=B("strong"),Go=o("s.RequestParam()"),Io=o(" method to specify descriptions for properties of the request dto in a strongly-typed manner."),Oa=i(),H=B("p"),Jn=B("strong"),Mo=o("RequestParam()"),Wo=o(" is also available when you use the "),zn=B("strong"),jo=o("Summary<TEndpoint,TRequest>"),Jo=o(" generic overload."),Ga=i(),is=B("p"),zo=o("Whatever you specify within the "),Hn=B("strong"),Ho=o("Summary()"),Uo=o(" method as above takes higher precedence over XML comments."),Ia=i(),U=B("h2"),A(us.$$.fragment),Lo=o(" Enabling XML Documentation"),Ma=i(),Fs=B("p"),Qo=o("XML documentation is only supported for request/response DTOs (Swagger schemas) which can be enabled by adding the following to the "),Un=B("strong"),Xo=o("csproj"),Vo=o(" file:"),Wa=i(),A(js.$$.fragment),A(fs.$$.fragment),ja=i(),L=B("h2"),A(As.$$.fragment),Yo=o(" Adding Query Params To Swagger Document"),Ja=i(),ms=B("p"),Ko=o("In order to let Swagger know that a particular request DTO property is being bound from a query string parameter, you need to decorate that property with the "),Ln=B("strong"),Zo=o("[QueryParam]"),sl=o(" attribute like below."),za=i(),x=B("p"),nl=o("When you annotate a property with the "),Qn=B("strong"),al=o("[QueryParam]"),el=o(" attribute, a "),A(ds.$$.fragment),ol=o(" to the Swagger document for that property."),Ha=i(),A(Js.$$.fragment),O=B("p"),ll=o("The "),Xn=B("strong"),pl=o("[QueryParam]"),tl=o(" attribute does not affect the "),A(gs.$$.fragment),rl=o(" in any way."),Ua=i(),ln=B("p"),Bl=o("It is just a way to make Swagger add a query param."),La=i(),Q=B("h2"),A($s.$$.fragment),cl=o(" Disable JWT Auth Scheme"),Qa=i(),Es=B("p"),yl=o(`Support for JWT Bearer Auth is automatically added.
If you need to disable it, simply pass a `),Vn=B("strong"),il=o("false"),ul=o(" value to the following parameter:"),Xa=i(),A(zs.$$.fragment),X=B("h2"),A(Cs.$$.fragment),Fl=o(" Multiple Authentication Schemes"),Va=i(),hs=B("p"),fl=o("Multiple global auth scheme support can be enabled by using the "),Yn=B("strong"),Al=o("AddAuth()"),ml=o(" method like below."),Ya=i(),A(Hs.$$.fragment),V=B("h2"),A(ws.$$.fragment),dl=o(" Swagger Serializer Options"),Ka=i(),Ds=B("p"),gl=o("Even though NSwag uses a separate serializer (Newtonsoft) internally, we specify serialization settings for NSwag using "),Kn=B("strong"),$l=o("System.Text.Json.JsonSerializerOptions"),El=o(" just so we don't have to deal with anything related to Newtonsoft (until NSwag fully switches over to System.Text.Json)."),Za=i(),A(Us.$$.fragment),P=B("p"),Cl=o("With the above approach, "),Zn=B("strong"),hl=o("System.Text.Json"),wl=o(" annotations such as "),sa=B("strong"),Dl=o("JsonIgnore"),bl=o(" and "),na=B("strong"),vl=o("JsonPropertyName"),_l=o(" on your DTOs work out of the box."),se=i(),Y=B("h2"),A(bs.$$.fragment),Sl=o(" Customize Endpoint Name/ Swagger Operation Id"),ne=i(),pn=B("p"),ql=o("The full name (including namespace) of the endpoint classes are used to generate the operation ids."),ae=i(),tn=B("p"),Pl=o("You can change it to use just the class name by doing the following at startup:"),ee=i(),A(Ls.$$.fragment),K=B("h2"),A(vs.$$.fragment),Tl=o(" Custom Endpoint Names"),oe=i(),_s=B("p"),Rl=o("If the auto-generated operation ids are not to your liking, you can specify a name for an endpoint using the "),aa=B("strong"),Nl=o("WithName()"),kl=o(" method."),le=i(),A(Qs.$$.fragment),A(Ss.$$.fragment),pe=i(),A(Xs.$$.fragment),rn=B("p"),xl=o("Instead you must do this:"),te=i(),A(Vs.$$.fragment),this.h()},l(s){r=c(s,"H1",{});var e=y(r);F=l(e,t),e.forEach(n),D=u(s),_=c(s,"P",{});var Ys=y(_);I=l(Ys,"Swagger support is provided via the excellent "),S=c(Ys,"STRONG",{});var oa=y(S);sn=l(oa,"NSwag"),oa.forEach(n),$e=l(Ys," library. your mileage may vary since NSwag is presently tied closely to the MVC framework and support for .NET 6 Minimal API is lacking in some areas."),Ys.forEach(n),fa=u(s),nn=c(s,"P",{});var la=y(nn);Ee=l(la,"If you find some rough edges with the Swagger support in FastEndpoints, please get in touch by creating a github issue or submit a pull request if you have experience dealing with Swagger."),la.forEach(n),Aa=u(s),M=c(s,"H2",{id:!0,tabindex:!0});var Bn=y(M);m(ss.$$.fragment,Bn),Ce=l(Bn," Enable Swagger"),Bn.forEach(n),ma=u(s),ns=c(s,"P",{});var Ks=y(ns);he=l(Ks,"First install the "),An=c(Ks,"STRONG",{});var pa=y(An);we=l(pa,"FastEndpoints.Swagger"),pa.forEach(n),De=l(Ks," package and add 4 lines to your app startup:"),Ks.forEach(n),da=u(s),an=c(s,"P",{});var ta=y(an);mn=c(ta,"STRONG",{});var ra=y(mn);be=l(ra,"Installation:"),ra.forEach(n),ta.forEach(n),ga=u(s),m(Ts.$$.fragment,s),en=c(s,"P",{});var Ba=y(en);dn=c(Ba,"STRONG",{});var ca=y(dn);ve=l(ca,"Usage:"),ca.forEach(n),Ba.forEach(n),$a=u(s),m(Rs.$$.fragment,s),R=c(s,"P",{});var Z=y(R);_e=l(Z,"You can then visit "),gn=c(Z,"STRONG",{});var ya=y(gn);Se=l(ya,"/swagger"),ya.forEach(n),qe=l(Z," or "),$n=c(Z,"STRONG",{});var ia=y($n);Pe=l(ia,"/swagger/v1/swagger.json"),ia.forEach(n),Te=l(Z," to see Swagger output."),Z.forEach(n),Ea=u(s),W=c(s,"H2",{id:!0,tabindex:!0});var cn=y(W);m(as.$$.fragment,cn),Re=l(cn," Configuration"),cn.forEach(n),Ca=u(s),es=c(s,"P",{});var Zs=y(es);Ne=l(Zs,"Swagger options can be configured as you'd typically do via the "),En=c(Zs,"STRONG",{});var ua=y(En);ke=l(ua,"AddSwaggerDoc()"),ua.forEach(n),xe=l(Zs," method:"),Zs.forEach(n),ha=u(s),m(Ns.$$.fragment,s),j=c(s,"H2",{id:!0,tabindex:!0});var Ol=y(j);m(os.$$.fragment,Ol),Oe=l(Ol," Describe Endpoints"),Ol.forEach(n),wa=u(s),N=c(s,"P",{});var yn=y(N);Ge=l(yn,"By default, both "),Cn=c(yn,"STRONG",{});var Ll=y(Cn);Ie=l(Ll,"Accepts"),Ll.forEach(n),Me=l(yn," and "),hn=c(yn,"STRONG",{});var Ql=y(hn);We=l(Ql,"Produces"),Ql.forEach(n),je=l(yn," metadata are inferred from the request/response DTO types of your endpoints and added to the Swagger document automatically."),yn.forEach(n),Da=u(s),ls=c(s,"P",{});var re=y(ls);Je=l(re,"So you only need to specify the additional accepts/produces metadata using the "),wn=c(re,"STRONG",{});var Xl=y(wn);ze=l(Xl,"Description()"),Xl.forEach(n),He=l(re," method like so:"),re.forEach(n),ba=u(s),m(ks.$$.fragment,s),b=c(s,"P",{});var G=y(b);Ue=l(G,"If the default "),Dn=c(G,"STRONG",{});var Vl=y(Dn);Le=l(Vl,"Accepts"),Vl.forEach(n),Qe=l(G," & "),bn=c(G,"STRONG",{});var Yl=y(bn);Xe=l(Yl,"Produces"),Yl.forEach(n),Ve=l(G," are not to your liking, you can clear the defaults and do it all yourself by setting the "),vn=c(G,"STRONG",{});var Kl=y(vn);Ye=l(Kl,"clearDefaults"),Kl.forEach(n),Ke=l(G," argument to "),_n=c(G,"STRONG",{});var Zl=y(_n);Ze=l(Zl,"true"),Zl.forEach(n),so=l(G,":"),G.forEach(n),va=u(s),m(xs.$$.fragment,s),J=c(s,"H2",{id:!0,tabindex:!0});var Gl=y(J);m(ps.$$.fragment,Gl),no=l(Gl," Swagger Documentation"),Gl.forEach(n),_a=u(s),ts=c(s,"P",{});var Be=y(ts);ao=l(Be,"Summary & description text, the different responses the endpoint returns, as well as an example request object can be specified with the "),Sn=c(Be,"STRONG",{});var sp=y(Sn);eo=l(sp,"Summary()"),sp.forEach(n),oo=l(Be," method:"),Be.forEach(n),Sa=u(s),m(Os.$$.fragment,s),rs=c(s,"P",{});var ce=y(rs);lo=l(ce,"If you prefer to move the summary text out of the endpoint class, you can do so by subclassing the "),qn=c(ce,"STRONG",{});var np=y(qn);po=l(np,"EndpointSummary"),np.forEach(n),to=l(ce," type:"),ce.forEach(n),qa=u(s),m(Gs.$$.fragment,s),k=c(s,"P",{});var un=y(k);ro=l(un,"Alternatively, if you'd like to get rid of all traces of "),Pn=c(un,"STRONG",{});var ap=y(Pn);Bo=l(ap,"Summary()"),ap.forEach(n),co=l(un," from your endpoint classes and have the summary completely separated, you can implement the "),Tn=c(un,"STRONG",{});var ep=y(Tn);yo=l(ep,"Summary<TEndpoint>"),ep.forEach(n),io=l(un," abstract class like shown below:"),un.forEach(n),Pa=u(s),m(Is.$$.fragment,s),w=c(s,"P",{});var T=y(w);uo=l(T,"The "),Rn=c(T,"STRONG",{});var op=y(Rn);Fo=l(op,"Response()"),op.forEach(n),fo=l(T," method does the same job as the "),Nn=c(T,"STRONG",{});var lp=y(Nn);Ao=l(lp,"Produces()"),lp.forEach(n),mo=l(T," method mentioned earlier. do note however, if you use the "),kn=c(T,"STRONG",{});var pp=y(kn);go=l(pp,"Response()"),pp.forEach(n),$o=l(T," method, the default "),xn=c(T,"STRONG",{});var tp=y(xn);Eo=l(tp,"200"),tp.forEach(n),Co=l(T," response is automatically removed, and you'd have to specify the "),On=c(T,"STRONG",{});var rp=y(On);ho=l(rp,"200"),rp.forEach(n),wo=l(T," response yourself if it applies to your endpoint."),T.forEach(n),Ta=u(s),z=c(s,"H2",{id:!0,tabindex:!0});var Il=y(z);m(Bs.$$.fragment,Il),Do=l(Il," Describe Request Params"),Il.forEach(n),Ra=u(s),q=c(s,"P",{});var qs=y(q);bo=l(qs,"Route parameters, Query parameters and Request DTO property descriptions can be specified either with xml comments or with the "),Gn=c(qs,"STRONG",{});var Bp=y(Gn);vo=l(Bp,"Summary()"),Bp.forEach(n),_o=l(qs," method or "),In=c(qs,"STRONG",{});var cp=y(In);So=l(cp,"EndpointSummary"),cp.forEach(n),qo=l(qs," or "),Mn=c(qs,"STRONG",{});var yp=y(Mn);Po=l(yp,"Summary<TEndpoint,TRequest>"),yp.forEach(n),To=l(qs," subclassing."),qs.forEach(n),Na=u(s),on=c(s,"P",{});var ip=y(on);Ro=l(ip,"Take the following for example:"),ip.forEach(n),ka=u(s),m(Ms.$$.fragment,s),m(Ws.$$.fragment,s),cs=c(s,"P",{});var ye=y(cs);No=l(ye,"Use the "),Wn=c(ye,"STRONG",{});var up=y(Wn);ko=l(up,"s.Params"),up.forEach(n),xo=l(ye," dictionary to specify descriptions for params that don't exist on the request dto or when there is no request DTO."),ye.forEach(n),xa=u(s),ys=c(s,"P",{});var ie=y(ys);Oo=l(ie,"Use the "),jn=c(ie,"STRONG",{});var Fp=y(jn);Go=l(Fp,"s.RequestParam()"),Fp.forEach(n),Io=l(ie," method to specify descriptions for properties of the request dto in a strongly-typed manner."),ie.forEach(n),Oa=u(s),H=c(s,"P",{});var Fa=y(H);Jn=c(Fa,"STRONG",{});var fp=y(Jn);Mo=l(fp,"RequestParam()"),fp.forEach(n),Wo=l(Fa," is also available when you use the "),zn=c(Fa,"STRONG",{});var Ap=y(zn);jo=l(Ap,"Summary<TEndpoint,TRequest>"),Ap.forEach(n),Jo=l(Fa," generic overload."),Fa.forEach(n),Ga=u(s),is=c(s,"P",{});var ue=y(is);zo=l(ue,"Whatever you specify within the "),Hn=c(ue,"STRONG",{});var mp=y(Hn);Ho=l(mp,"Summary()"),mp.forEach(n),Uo=l(ue," method as above takes higher precedence over XML comments."),ue.forEach(n),Ia=u(s),U=c(s,"H2",{id:!0,tabindex:!0});var Ml=y(U);m(us.$$.fragment,Ml),Lo=l(Ml," Enabling XML Documentation"),Ml.forEach(n),Ma=u(s),Fs=c(s,"P",{});var Fe=y(Fs);Qo=l(Fe,"XML documentation is only supported for request/response DTOs (Swagger schemas) which can be enabled by adding the following to the "),Un=c(Fe,"STRONG",{});var dp=y(Un);Xo=l(dp,"csproj"),dp.forEach(n),Vo=l(Fe," file:"),Fe.forEach(n),Wa=u(s),m(js.$$.fragment,s),m(fs.$$.fragment,s),ja=u(s),L=c(s,"H2",{id:!0,tabindex:!0});var Wl=y(L);m(As.$$.fragment,Wl),Yo=l(Wl," Adding Query Params To Swagger Document"),Wl.forEach(n),Ja=u(s),ms=c(s,"P",{});var fe=y(ms);Ko=l(fe,"In order to let Swagger know that a particular request DTO property is being bound from a query string parameter, you need to decorate that property with the "),Ln=c(fe,"STRONG",{});var gp=y(Ln);Zo=l(gp,"[QueryParam]"),gp.forEach(n),sl=l(fe," attribute like below."),fe.forEach(n),za=u(s),x=c(s,"P",{});var Fn=y(x);nl=l(Fn,"When you annotate a property with the "),Qn=c(Fn,"STRONG",{});var $p=y(Qn);al=l($p,"[QueryParam]"),$p.forEach(n),el=l(Fn," attribute, a "),m(ds.$$.fragment,Fn),ol=l(Fn," to the Swagger document for that property."),Fn.forEach(n),Ha=u(s),m(Js.$$.fragment,s),O=c(s,"P",{});var fn=y(O);ll=l(fn,"The "),Xn=c(fn,"STRONG",{});var Ep=y(Xn);pl=l(Ep,"[QueryParam]"),Ep.forEach(n),tl=l(fn," attribute does not affect the "),m(gs.$$.fragment,fn),rl=l(fn," in any way."),fn.forEach(n),Ua=u(s),ln=c(s,"P",{});var Cp=y(ln);Bl=l(Cp,"It is just a way to make Swagger add a query param."),Cp.forEach(n),La=u(s),Q=c(s,"H2",{id:!0,tabindex:!0});var jl=y(Q);m($s.$$.fragment,jl),cl=l(jl," Disable JWT Auth Scheme"),jl.forEach(n),Qa=u(s),Es=c(s,"P",{});var Ae=y(Es);yl=l(Ae,`Support for JWT Bearer Auth is automatically added.
If you need to disable it, simply pass a `),Vn=c(Ae,"STRONG",{});var hp=y(Vn);il=l(hp,"false"),hp.forEach(n),ul=l(Ae," value to the following parameter:"),Ae.forEach(n),Xa=u(s),m(zs.$$.fragment,s),X=c(s,"H2",{id:!0,tabindex:!0});var Jl=y(X);m(Cs.$$.fragment,Jl),Fl=l(Jl," Multiple Authentication Schemes"),Jl.forEach(n),Va=u(s),hs=c(s,"P",{});var me=y(hs);fl=l(me,"Multiple global auth scheme support can be enabled by using the "),Yn=c(me,"STRONG",{});var wp=y(Yn);Al=l(wp,"AddAuth()"),wp.forEach(n),ml=l(me," method like below."),me.forEach(n),Ya=u(s),m(Hs.$$.fragment,s),V=c(s,"H2",{id:!0,tabindex:!0});var zl=y(V);m(ws.$$.fragment,zl),dl=l(zl," Swagger Serializer Options"),zl.forEach(n),Ka=u(s),Ds=c(s,"P",{});var de=y(Ds);gl=l(de,"Even though NSwag uses a separate serializer (Newtonsoft) internally, we specify serialization settings for NSwag using "),Kn=c(de,"STRONG",{});var Dp=y(Kn);$l=l(Dp,"System.Text.Json.JsonSerializerOptions"),Dp.forEach(n),El=l(de," just so we don't have to deal with anything related to Newtonsoft (until NSwag fully switches over to System.Text.Json)."),de.forEach(n),Za=u(s),m(Us.$$.fragment,s),P=c(s,"P",{});var Ps=y(P);Cl=l(Ps,"With the above approach, "),Zn=c(Ps,"STRONG",{});var bp=y(Zn);hl=l(bp,"System.Text.Json"),bp.forEach(n),wl=l(Ps," annotations such as "),sa=c(Ps,"STRONG",{});var vp=y(sa);Dl=l(vp,"JsonIgnore"),vp.forEach(n),bl=l(Ps," and "),na=c(Ps,"STRONG",{});var _p=y(na);vl=l(_p,"JsonPropertyName"),_p.forEach(n),_l=l(Ps," on your DTOs work out of the box."),Ps.forEach(n),se=u(s),Y=c(s,"H2",{id:!0,tabindex:!0});var Hl=y(Y);m(bs.$$.fragment,Hl),Sl=l(Hl," Customize Endpoint Name/ Swagger Operation Id"),Hl.forEach(n),ne=u(s),pn=c(s,"P",{});var Sp=y(pn);ql=l(Sp,"The full name (including namespace) of the endpoint classes are used to generate the operation ids."),Sp.forEach(n),ae=u(s),tn=c(s,"P",{});var qp=y(tn);Pl=l(qp,"You can change it to use just the class name by doing the following at startup:"),qp.forEach(n),ee=u(s),m(Ls.$$.fragment,s),K=c(s,"H2",{id:!0,tabindex:!0});var Ul=y(K);m(vs.$$.fragment,Ul),Tl=l(Ul," Custom Endpoint Names"),Ul.forEach(n),oe=u(s),_s=c(s,"P",{});var ge=y(_s);Rl=l(ge,"If the auto-generated operation ids are not to your liking, you can specify a name for an endpoint using the "),aa=c(ge,"STRONG",{});var Pp=y(aa);Nl=l(Pp,"WithName()"),Pp.forEach(n),kl=l(ge," method."),ge.forEach(n),le=u(s),m(Qs.$$.fragment,s),m(Ss.$$.fragment,s),pe=u(s),m(Xs.$$.fragment,s),rn=c(s,"P",{});var Tp=y(rn);xl=l(Tp,"Instead you must do this:"),Tp.forEach(n),te=u(s),m(Vs.$$.fragment,s),this.h()},h(){C(M,"id","enable-swagger"),C(M,"tabindex","-1"),C(W,"id","configuration"),C(W,"tabindex","-1"),C(j,"id","describe-endpoints"),C(j,"tabindex","-1"),C(J,"id","swagger-documentation"),C(J,"tabindex","-1"),C(z,"id","describe-request-params"),C(z,"tabindex","-1"),C(U,"id","enabling-xml-documentation"),C(U,"tabindex","-1"),C(L,"id","adding-query-params-to-swagger-document"),C(L,"tabindex","-1"),C(Q,"id","disable-jwt-auth-scheme"),C(Q,"tabindex","-1"),C(X,"id","multiple-authentication-schemes"),C(X,"tabindex","-1"),C(V,"id","swagger-serializer-options"),C(V,"tabindex","-1"),C(Y,"id","customize-endpoint-name-swagger-operation-id"),C(Y,"tabindex","-1"),C(K,"id","custom-endpoint-names"),C(K,"tabindex","-1")},m(s,e){p(s,r,e),a(r,F),p(s,D,e),p(s,_,e),a(_,I),a(_,S),a(S,sn),a(_,$e),p(s,fa,e),p(s,nn,e),a(nn,Ee),p(s,Aa,e),p(s,M,e),d(ss,M,null),a(M,Ce),p(s,ma,e),p(s,ns,e),a(ns,he),a(ns,An),a(An,we),a(ns,De),p(s,da,e),p(s,an,e),a(an,mn),a(mn,be),p(s,ga,e),d(Ts,s,e),p(s,en,e),a(en,dn),a(dn,ve),p(s,$a,e),d(Rs,s,e),p(s,R,e),a(R,_e),a(R,gn),a(gn,Se),a(R,qe),a(R,$n),a($n,Pe),a(R,Te),p(s,Ea,e),p(s,W,e),d(as,W,null),a(W,Re),p(s,Ca,e),p(s,es,e),a(es,Ne),a(es,En),a(En,ke),a(es,xe),p(s,ha,e),d(Ns,s,e),p(s,j,e),d(os,j,null),a(j,Oe),p(s,wa,e),p(s,N,e),a(N,Ge),a(N,Cn),a(Cn,Ie),a(N,Me),a(N,hn),a(hn,We),a(N,je),p(s,Da,e),p(s,ls,e),a(ls,Je),a(ls,wn),a(wn,ze),a(ls,He),p(s,ba,e),d(ks,s,e),p(s,b,e),a(b,Ue),a(b,Dn),a(Dn,Le),a(b,Qe),a(b,bn),a(bn,Xe),a(b,Ve),a(b,vn),a(vn,Ye),a(b,Ke),a(b,_n),a(_n,Ze),a(b,so),p(s,va,e),d(xs,s,e),p(s,J,e),d(ps,J,null),a(J,no),p(s,_a,e),p(s,ts,e),a(ts,ao),a(ts,Sn),a(Sn,eo),a(ts,oo),p(s,Sa,e),d(Os,s,e),p(s,rs,e),a(rs,lo),a(rs,qn),a(qn,po),a(rs,to),p(s,qa,e),d(Gs,s,e),p(s,k,e),a(k,ro),a(k,Pn),a(Pn,Bo),a(k,co),a(k,Tn),a(Tn,yo),a(k,io),p(s,Pa,e),d(Is,s,e),p(s,w,e),a(w,uo),a(w,Rn),a(Rn,Fo),a(w,fo),a(w,Nn),a(Nn,Ao),a(w,mo),a(w,kn),a(kn,go),a(w,$o),a(w,xn),a(xn,Eo),a(w,Co),a(w,On),a(On,ho),a(w,wo),p(s,Ta,e),p(s,z,e),d(Bs,z,null),a(z,Do),p(s,Ra,e),p(s,q,e),a(q,bo),a(q,Gn),a(Gn,vo),a(q,_o),a(q,In),a(In,So),a(q,qo),a(q,Mn),a(Mn,Po),a(q,To),p(s,Na,e),p(s,on,e),a(on,Ro),p(s,ka,e),d(Ms,s,e),d(Ws,s,e),p(s,cs,e),a(cs,No),a(cs,Wn),a(Wn,ko),a(cs,xo),p(s,xa,e),p(s,ys,e),a(ys,Oo),a(ys,jn),a(jn,Go),a(ys,Io),p(s,Oa,e),p(s,H,e),a(H,Jn),a(Jn,Mo),a(H,Wo),a(H,zn),a(zn,jo),a(H,Jo),p(s,Ga,e),p(s,is,e),a(is,zo),a(is,Hn),a(Hn,Ho),a(is,Uo),p(s,Ia,e),p(s,U,e),d(us,U,null),a(U,Lo),p(s,Ma,e),p(s,Fs,e),a(Fs,Qo),a(Fs,Un),a(Un,Xo),a(Fs,Vo),p(s,Wa,e),d(js,s,e),d(fs,s,e),p(s,ja,e),p(s,L,e),d(As,L,null),a(L,Yo),p(s,Ja,e),p(s,ms,e),a(ms,Ko),a(ms,Ln),a(Ln,Zo),a(ms,sl),p(s,za,e),p(s,x,e),a(x,nl),a(x,Qn),a(Qn,al),a(x,el),d(ds,x,null),a(x,ol),p(s,Ha,e),d(Js,s,e),p(s,O,e),a(O,ll),a(O,Xn),a(Xn,pl),a(O,tl),d(gs,O,null),a(O,rl),p(s,Ua,e),p(s,ln,e),a(ln,Bl),p(s,La,e),p(s,Q,e),d($s,Q,null),a(Q,cl),p(s,Qa,e),p(s,Es,e),a(Es,yl),a(Es,Vn),a(Vn,il),a(Es,ul),p(s,Xa,e),d(zs,s,e),p(s,X,e),d(Cs,X,null),a(X,Fl),p(s,Va,e),p(s,hs,e),a(hs,fl),a(hs,Yn),a(Yn,Al),a(hs,ml),p(s,Ya,e),d(Hs,s,e),p(s,V,e),d(ws,V,null),a(V,dl),p(s,Ka,e),p(s,Ds,e),a(Ds,gl),a(Ds,Kn),a(Kn,$l),a(Ds,El),p(s,Za,e),d(Us,s,e),p(s,P,e),a(P,Cl),a(P,Zn),a(Zn,hl),a(P,wl),a(P,sa),a(sa,Dl),a(P,bl),a(P,na),a(na,vl),a(P,_l),p(s,se,e),p(s,Y,e),d(bs,Y,null),a(Y,Sl),p(s,ne,e),p(s,pn,e),a(pn,ql),p(s,ae,e),p(s,tn,e),a(tn,Pl),p(s,ee,e),d(Ls,s,e),p(s,K,e),d(vs,K,null),a(K,Tl),p(s,oe,e),p(s,_s,e),a(_s,Rl),a(_s,aa),a(aa,Nl),a(_s,kl),p(s,le,e),d(Qs,s,e),d(Ss,s,e),p(s,pe,e),d(Xs,s,e),p(s,rn,e),a(rn,xl),p(s,te,e),d(Vs,s,e),ea=!0},p(s,[e]){(!ea||e&1)&&t!==(t=s[0].title+"")&&Gp(F,t);const Ys={};e&2&&(Ys.$$scope={dirty:e,ctx:s}),ss.$set(Ys);const oa={};e&2&&(oa.$$scope={dirty:e,ctx:s}),as.$set(oa);const la={};e&2&&(la.$$scope={dirty:e,ctx:s}),os.$set(la);const Bn={};e&2&&(Bn.$$scope={dirty:e,ctx:s}),ps.$set(Bn);const Ks={};e&2&&(Ks.$$scope={dirty:e,ctx:s}),Bs.$set(Ks);const pa={};e&2&&(pa.$$scope={dirty:e,ctx:s}),us.$set(pa);const ta={};e&2&&(ta.$$scope={dirty:e,ctx:s}),fs.$set(ta);const ra={};e&2&&(ra.$$scope={dirty:e,ctx:s}),As.$set(ra);const Ba={};e&2&&(Ba.$$scope={dirty:e,ctx:s}),ds.$set(Ba);const ca={};e&2&&(ca.$$scope={dirty:e,ctx:s}),gs.$set(ca);const Z={};e&2&&(Z.$$scope={dirty:e,ctx:s}),$s.$set(Z);const ya={};e&2&&(ya.$$scope={dirty:e,ctx:s}),Cs.$set(ya);const ia={};e&2&&(ia.$$scope={dirty:e,ctx:s}),ws.$set(ia);const cn={};e&2&&(cn.$$scope={dirty:e,ctx:s}),bs.$set(cn);const Zs={};e&2&&(Zs.$$scope={dirty:e,ctx:s}),vs.$set(Zs);const ua={};e&2&&(ua.$$scope={dirty:e,ctx:s}),Ss.$set(ua)},i(s){ea||(g(ss.$$.fragment,s),g(Ts.$$.fragment,s),g(Rs.$$.fragment,s),g(as.$$.fragment,s),g(Ns.$$.fragment,s),g(os.$$.fragment,s),g(ks.$$.fragment,s),g(xs.$$.fragment,s),g(ps.$$.fragment,s),g(Os.$$.fragment,s),g(Gs.$$.fragment,s),g(Is.$$.fragment,s),g(Bs.$$.fragment,s),g(Ms.$$.fragment,s),g(Ws.$$.fragment,s),g(us.$$.fragment,s),g(js.$$.fragment,s),g(fs.$$.fragment,s),g(As.$$.fragment,s),g(ds.$$.fragment,s),g(Js.$$.fragment,s),g(gs.$$.fragment,s),g($s.$$.fragment,s),g(zs.$$.fragment,s),g(Cs.$$.fragment,s),g(Hs.$$.fragment,s),g(ws.$$.fragment,s),g(Us.$$.fragment,s),g(bs.$$.fragment,s),g(Ls.$$.fragment,s),g(vs.$$.fragment,s),g(Qs.$$.fragment,s),g(Ss.$$.fragment,s),g(Xs.$$.fragment,s),g(Vs.$$.fragment,s),ea=!0)},o(s){$(ss.$$.fragment,s),$(Ts.$$.fragment,s),$(Rs.$$.fragment,s),$(as.$$.fragment,s),$(Ns.$$.fragment,s),$(os.$$.fragment,s),$(ks.$$.fragment,s),$(xs.$$.fragment,s),$(ps.$$.fragment,s),$(Os.$$.fragment,s),$(Gs.$$.fragment,s),$(Is.$$.fragment,s),$(Bs.$$.fragment,s),$(Ms.$$.fragment,s),$(Ws.$$.fragment,s),$(us.$$.fragment,s),$(js.$$.fragment,s),$(fs.$$.fragment,s),$(As.$$.fragment,s),$(ds.$$.fragment,s),$(Js.$$.fragment,s),$(gs.$$.fragment,s),$($s.$$.fragment,s),$(zs.$$.fragment,s),$(Cs.$$.fragment,s),$(Hs.$$.fragment,s),$(ws.$$.fragment,s),$(Us.$$.fragment,s),$(bs.$$.fragment,s),$(Ls.$$.fragment,s),$(vs.$$.fragment,s),$(Qs.$$.fragment,s),$(Ss.$$.fragment,s),$(Xs.$$.fragment,s),$(Vs.$$.fragment,s),ea=!1},d(s){s&&n(r),s&&n(D),s&&n(_),s&&n(fa),s&&n(nn),s&&n(Aa),s&&n(M),E(ss),s&&n(ma),s&&n(ns),s&&n(da),s&&n(an),s&&n(ga),E(Ts,s),s&&n(en),s&&n($a),E(Rs,s),s&&n(R),s&&n(Ea),s&&n(W),E(as),s&&n(Ca),s&&n(es),s&&n(ha),E(Ns,s),s&&n(j),E(os),s&&n(wa),s&&n(N),s&&n(Da),s&&n(ls),s&&n(ba),E(ks,s),s&&n(b),s&&n(va),E(xs,s),s&&n(J),E(ps),s&&n(_a),s&&n(ts),s&&n(Sa),E(Os,s),s&&n(rs),s&&n(qa),E(Gs,s),s&&n(k),s&&n(Pa),E(Is,s),s&&n(w),s&&n(Ta),s&&n(z),E(Bs),s&&n(Ra),s&&n(q),s&&n(Na),s&&n(on),s&&n(ka),E(Ms,s),E(Ws,s),s&&n(cs),s&&n(xa),s&&n(ys),s&&n(Oa),s&&n(H),s&&n(Ga),s&&n(is),s&&n(Ia),s&&n(U),E(us),s&&n(Ma),s&&n(Fs),s&&n(Wa),E(js,s),E(fs,s),s&&n(ja),s&&n(L),E(As),s&&n(Ja),s&&n(ms),s&&n(za),s&&n(x),E(ds),s&&n(Ha),E(Js,s),s&&n(O),E(gs),s&&n(Ua),s&&n(ln),s&&n(La),s&&n(Q),E($s),s&&n(Qa),s&&n(Es),s&&n(Xa),E(zs,s),s&&n(X),E(Cs),s&&n(Va),s&&n(hs),s&&n(Ya),E(Hs,s),s&&n(V),E(ws),s&&n(Ka),s&&n(Ds),s&&n(Za),E(Us,s),s&&n(P),s&&n(se),s&&n(Y),E(bs),s&&n(ne),s&&n(pn),s&&n(ae),s&&n(tn),s&&n(ee),E(Ls,s),s&&n(K),E(vs),s&&n(oe),s&&n(_s),s&&n(le),E(Qs,s),E(Ss,s),s&&n(pe),E(Xs,s),s&&n(rn),s&&n(te),E(Vs,s)}}}function ot(f,r,t){let F;return Ip(f,Mp,D=>t(0,F=D)),[F]}class it extends kp{constructor(r){super(),xp(this,r,ot,et,Op,{})}}export{it as default};
