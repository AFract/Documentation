import{S as la,i as oa,s as ta,l as c,r as p,a as f,w as d,m as B,n as i,u as r,h as n,c as A,x as m,p as F,b as t,M as o,y as $,v as pa,f as h,t as E,B as C,_ as ra}from"../../chunks/index-6391be64.js";import{f as ca}from"../../chunks/scroll-4f99ad69.js";import{C as N}from"../../chunks/CodeFence-e0140bb4.js";import{L as w}from"../../chunks/Link-69c668c2.js";import{A as Ba}from"../../chunks/Admonition-a969bddf.js";import"../../chunks/singletons-9fd4729a.js";import"../../chunks/contexts-c56b72f8.js";function ia(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function ya(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function ua(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function fa(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function Aa(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function Fa(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function da(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function ma(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function $a(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function ha(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function Ea(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function Ca(u){let l;return{c(){l=p("example project")},l(a){l=r(a,"example project")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function ga(u){let l;return{c(){l=p("Auth0")},l(a){l=r(a,"Auth0")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function _a(u){let l,a,y,S,b,v,j;return y=new w({props:{href:"https://github.com/dj-nitehawk/FastEndpoints-Auth0-Demo",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[Ca]},$$scope:{ctx:u}}}),b=new w({props:{href:"https://auth0.com/access-management",target:"_blank",rel:"noopener noreferrer",$$slots:{default:[ga]},$$scope:{ctx:u}}}),{c(){l=c("p"),a=p("Here's an "),d(y.$$.fragment),S=p(" using "),d(b.$$.fragment),v=p(" with permissions.")},l(_){l=B(_,"P",{});var g=i(l);a=r(g,"Here's an "),m(y.$$.fragment,g),S=r(g," using "),m(b.$$.fragment,g),v=r(g," with permissions."),g.forEach(n)},m(_,g){t(_,l,g),o(l,a),$(y,l,null),o(l,S),$(b,l,null),o(l,v),j=!0},p(_,g){const Es={};g&2&&(Es.$$scope={dirty:g,ctx:_}),y.$set(Es);const G={};g&2&&(G.$$scope={dirty:g,ctx:_}),b.$set(G)},i(_){j||(h(y.$$.fragment,_),h(b.$$.fragment,_),j=!0)},o(_){E(y.$$.fragment,_),E(b.$$.fragment,_),j=!1},d(_){_&&n(l),C(y),C(b)}}}function ba(u){let l;return{c(){l=p("#")},l(a){l=r(a,"#")},m(a,y){t(a,l,y)},d(a){a&&n(l)}}}function wa(u){let l,a=u[0].title+"",y,S,b,v,j,_,g,Es,G,Un,Rn,an,P,Y,Ln,ln,M,Hn,Rs,On,In,on,rs,cs,T,z,Jn,tn,Cs,Wn,pn,Bs,x,K,Nn,rn,gs,jn,cn,D,Ls,Gn,Yn,Hs,Mn,zn,Os,Kn,Vn,Is,Qn,Bn,U,V,Xn,yn,_s,Zn,un,is,ys,R,Q,se,fn,bs,ne,An,us,L,X,ee,Fn,ws,fs,ae,Js,le,oe,dn,H,Z,te,mn,vs,As,pe,Ws,re,ce,$n,O,ss,Be,hn,Ds,Ns,ie,En,I,ns,ye,Cn,qs,js,ue,gn,Fs,es,fe,Gs,Ae,Fe,_n,as,de,Ys,me,$e,bn,J,ls,he,wn,ks,Ee,vn,os,Dn,W,ts,Ce,qn,Ss,ge,kn,ds,ms,q,_e,Ms,be,we,zs,ve,De,Ks,qe,ke,Vs;return v=new w({props:{class:"header-anchor",href:"#securing-endpoints","aria-hidden":"true",$$slots:{default:[ia]},$$scope:{ctx:u}}}),Y=new w({props:{class:"header-anchor",href:"#jwt-bearer-authentication","aria-hidden":"true",$$slots:{default:[ya]},$$scope:{ctx:u}}}),rs=new N({props:{lang:"bash",ext:"sh",linesCount:2,rawCode:`  dotnet add package FastEndpoints.Security
`,showCopyCode:!0,code:`<pre><code><span class="line"><span style="color: #ABB2BF">  dotnet add package FastEndpoints.Security</span></span>
<span class="line"></span></code></pre>`}}),cs=new N({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:13,code:`<pre><code><span class="line"><span style="color: #E06C75">global</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">FastEndpoints</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #E06C75">global</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">using</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">FastEndpoints</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Security</span><span style="color: #ABB2BF">; </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">builder</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">WebApplication</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">CreateBuilder</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddAuthenticationJWTBearer</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;TokenSigningKey&quot;</span><span style="color: #ABB2BF">); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">app</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Build</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseAuthentication</span><span style="color: #ABB2BF">(); </span><span style="color: #7F848E; font-style: italic">//add this</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseAuthorization</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">UseFastEndpoints</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #E5C07B">app</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">Run</span><span style="color: #ABB2BF">();</span></span>
<span class="line"></span></code></pre>`}}),z=new w({props:{class:"header-anchor",href:"#generating-jwt-tokens","aria-hidden":"true",$$slots:{default:[ua]},$$scope:{ctx:u}}}),Bs=new N({props:{lang:"csharp",ext:"cs",linesCount:32,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">UserLoginEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">LoginRequest</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Post</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/login&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">();</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">async</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">Task</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">HandleAsync</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">LoginRequest</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">CancellationToken</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">ct</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Username</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">==</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;admin&quot;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">&amp;&amp;</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Password</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">==</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&quot;pass&quot;</span><span style="color: #ABB2BF">)</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">var</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">jwtToken</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">JWTBearer</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">CreateToken</span><span style="color: #ABB2BF">(</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E5C07B">signingKey</span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&quot;TokenSigningKey&quot;</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E5C07B">expireAt</span><span style="color: #ABB2BF">: </span><span style="color: #E5C07B">DateTime</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">UtcNow</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddDays</span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">1</span><span style="color: #ABB2BF">),</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E5C07B">claims</span><span style="color: #ABB2BF">: </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF">[] { (</span><span style="color: #98C379">&quot;Username&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Username</span><span style="color: #ABB2BF">), (</span><span style="color: #98C379">&quot;UserID&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;001&quot;</span><span style="color: #ABB2BF">) },</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E5C07B">roles</span><span style="color: #ABB2BF">: </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF">[] { </span><span style="color: #98C379">&quot;Admin&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Management&quot;</span><span style="color: #ABB2BF"> },</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E5C07B">permissions</span><span style="color: #ABB2BF">: </span><span style="color: #C678DD">new</span><span style="color: #ABB2BF">[] { </span><span style="color: #98C379">&quot;ManageInventory&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;ManageUsers&quot;</span><span style="color: #ABB2BF"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #C678DD">await</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">SendAsync</span><span style="color: #ABB2BF">(</span><span style="color: #C678DD">new</span></span>
<span class="line"><span style="color: #ABB2BF">            {</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E06C75">Username</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">req</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Username</span><span style="color: #ABB2BF">,</span></span>
<span class="line"><span style="color: #ABB2BF">                </span><span style="color: #E06C75">Token</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75">jwtToken</span></span>
<span class="line"><span style="color: #ABB2BF">            });</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #C678DD">else</span></span>
<span class="line"><span style="color: #ABB2BF">        {</span></span>
<span class="line"><span style="color: #ABB2BF">            </span><span style="color: #61AFEF">ThrowError</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;The supplied credentials are invalid!&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        }</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),K=new w({props:{class:"header-anchor",href:"#endpoint-authorization","aria-hidden":"true",$$slots:{default:[fa]},$$scope:{ctx:u}}}),V=new w({props:{class:"header-anchor",href:"#pre-built-security-policies","aria-hidden":"true",$$slots:{default:[Aa]},$$scope:{ctx:u}}}),is=new N({props:{title:"Program.cs(Configure Services)",lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"></span>
<span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddAuthorization</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddPolicy</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;ManagersOnlyPolicy&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">x</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">RequireRole</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Manager&quot;</span><span style="color: #ABB2BF">).</span><span style="color: #61AFEF">RequireClaim</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;ManagerID&quot;</span><span style="color: #ABB2BF">));</span></span>
<span class="line"><span style="color: #ABB2BF">})</span></span>
<span class="line"></span></code></pre>`}}),ys=new N({props:{title:"UpdateUserEndpoint.cs",lang:"csharp",ext:"cs",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">UpdateUserEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">UpdateUserRequest</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Verbs</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PUT</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Routes</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/users/update&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Policies</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;ManagersOnlyPolicy&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),Q=new w({props:{class:"header-anchor",href:"#declarative-security-policies","aria-hidden":"true",$$slots:{default:[Fa]},$$scope:{ctx:u}}}),us=new N({props:{title:"RestrictedEndpoint.cs",lang:"csharp",ext:"cs",linesCount:12,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RestrictedEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">RestrictedRequest</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Verbs</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">POST</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Routes</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/restricted&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Claims</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;AdminID&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;EmployeeID&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Roles</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;Admin&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;Manager&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Permissions</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;UpdateUsersPermission&quot;</span><span style="color: #ABB2BF">, </span><span style="color: #98C379">&quot;DeleteUsersPermission&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),X=new w({props:{class:"header-anchor",href:"#claims-method","aria-hidden":"true",$$slots:{default:[da]},$$scope:{ctx:u}}}),Z=new w({props:{class:"header-anchor",href:"#permissions-method","aria-hidden":"true",$$slots:{default:[ma]},$$scope:{ctx:u}}}),ss=new w({props:{class:"header-anchor",href:"#roles-method","aria-hidden":"true",$$slots:{default:[$a]},$$scope:{ctx:u}}}),ns=new w({props:{class:"header-anchor",href:"#allowanonymous-method","aria-hidden":"true",$$slots:{default:[ha]},$$scope:{ctx:u}}}),Fs=new N({props:{title:"RestrictedEndpoint.cs",lang:"csharp",ext:"cs",linesCount:10,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">class</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">RestrictedEndpoint</span><span style="color: #ABB2BF"> : </span><span style="color: #E5C07B">Endpoint</span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B">RestrictedRequest</span><span style="color: #ABB2BF">&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">    {</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Verbs</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">POST</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PUT</span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">PATCH</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">Routes</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/api/restricted&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">        </span><span style="color: #61AFEF">AllowAnonymous</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">Http</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">POST</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    }</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),ls=new w({props:{class:"header-anchor",href:"#other-auth-providers","aria-hidden":"true",$$slots:{default:[Ea]},$$scope:{ctx:u}}}),os=new Ba({props:{type:"info",$$slots:{default:[_a]},$$scope:{ctx:u}}}),ts=new w({props:{class:"header-anchor",href:"#multiple-authentication-schemes","aria-hidden":"true",$$slots:{default:[ba]},$$scope:{ctx:u}}}),ds=new N({props:{title:"Program.cs",lang:"csharp",ext:"cs",linesCount:12,code:`<pre><code><span class="line"><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Services</span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddAuthentication</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF"> =&gt;</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">DefaultAuthenticateScheme</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">CookieAuthenticationDefaults</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">AuthenticationScheme</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">DefaultChallengeScheme</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">CookieAuthenticationDefaults</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">AuthenticationScheme</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">})</span></span>
<span class="line"><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddCookie</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF"> =&gt; </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">SlidingExpiration</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">true</span><span style="color: #ABB2BF">) </span><span style="color: #7F848E; font-style: italic">// cookie auth</span></span>
<span class="line"><span style="color: #ABB2BF">.</span><span style="color: #61AFEF">AddJwtBearer</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF"> =&gt;                          </span><span style="color: #7F848E; font-style: italic">// jwt bearer auth</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Authority</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">$&quot;https://{</span><span style="color: #E5C07B">builder</span><span style="color: #98C379">.</span><span style="color: #E5C07B">Configuration</span><span style="color: #98C379">[&quot;Auth0:Domain&quot;]}/&quot;</span><span style="color: #ABB2BF">;</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #E5C07B">options</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Audience</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B">builder</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">Configuration</span><span style="color: #ABB2BF">[</span><span style="color: #98C379">&quot;Auth0:Audience&quot;</span><span style="color: #ABB2BF">];</span></span>
<span class="line"><span style="color: #ABB2BF">});</span></span>
<span class="line"></span></code></pre>`}}),ms=new N({props:{title:"Endpoint.cs",lang:"csharp",ext:"cs",linesCount:6,code:`<pre><code><span class="line"><span style="color: #C678DD">public</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">override</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">void</span><span style="color: #ABB2BF"> </span><span style="color: #61AFEF">Configure</span><span style="color: #ABB2BF">()</span></span>
<span class="line"><span style="color: #ABB2BF">{</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">Get</span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&quot;/account/profile&quot;</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">    </span><span style="color: #61AFEF">AuthSchems</span><span style="color: #ABB2BF">(</span><span style="color: #E5C07B">JwtBearerDefaults</span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B">AuthenticationScheme</span><span style="color: #ABB2BF">);</span></span>
<span class="line"><span style="color: #ABB2BF">}</span></span>
<span class="line"></span></code></pre>`}}),{c(){l=c("h1"),y=p(a),S=f(),b=c("h2"),d(v.$$.fragment),j=p(" Securing Endpoints"),_=f(),g=c("p"),Es=p("Endpoints are secure by default and you'd have to call "),G=c("strong"),Un=p("AllowAnonymous()"),Rn=p(" in the configuration if you'd like to allow unauthenticated users to access a particular endpoint."),an=f(),P=c("h2"),d(Y.$$.fragment),Ln=p(" JWT Bearer Authentication"),ln=f(),M=c("p"),Hn=p(`Support for easy JWT Bearer Authentication is provided.
You simply need to install the `),Rs=c("strong"),On=p("FastEndpoints.Security"),In=p(" package and register it in the middleware pipeline like so:"),on=f(),d(rs.$$.fragment),d(cs.$$.fragment),T=c("h2"),d(z.$$.fragment),Jn=p(" Generating JWT Tokens"),tn=f(),Cs=c("p"),Wn=p("You can generate a JWT token for sending to the client with an endpoint that signs in users like so:"),pn=f(),d(Bs.$$.fragment),x=c("h2"),d(K.$$.fragment),Nn=p(" Endpoint Authorization"),rn=f(),gs=c("p"),jn=p("Once an authentication provider is registered such as JWT Bearer as shown above, you can restrict access to users based on the following:"),cn=f(),D=c("ul"),Ls=c("li"),Gn=p("Policies"),Yn=f(),Hs=c("li"),Mn=p("Claims"),zn=f(),Os=c("li"),Kn=p("Roles"),Vn=f(),Is=c("li"),Qn=p("Permissions"),Bn=f(),U=c("h2"),d(V.$$.fragment),Xn=p(" Pre-Built Security Policies"),yn=f(),_s=c("p"),Zn=p("Security policies can be pre-built and registered during app startup and endpoints can choose to allow access to users based on the registered policy names like so:"),un=f(),d(is.$$.fragment),d(ys.$$.fragment),R=c("h2"),d(Q.$$.fragment),se=p(" Declarative Security Policies"),fn=f(),bs=c("p"),ne=p("Instead of registering each security policy at startup you can selectively specify security requirements for each endpoint in the endpoint configuration itself like so:"),An=f(),d(us.$$.fragment),L=c("h3"),d(X.$$.fragment),ee=p(" Claims() method"),Fn=f(),ws=c("ul"),fs=c("li"),ae=p("With this method you are specifying that if a user principal has ANY of the specified claims, access should be allowed. if the requirement is to allow access only if ALL specified claims are present, you can use the "),Js=c("strong"),le=p("ClaimsAll()"),oe=p(" method."),dn=f(),H=c("h3"),d(Z.$$.fragment),te=p(" Permissions() method"),mn=f(),vs=c("ul"),As=c("li"),pe=p("Just like above, you can specify that ANY of the specified permissions should allow access. Or require ALL of the specified permissions by using the "),Ws=c("strong"),re=p("PermissionsAll()"),ce=p(" method."),$n=f(),O=c("h3"),d(ss.$$.fragment),Be=p(" Roles() method"),hn=f(),Ds=c("ul"),Ns=c("li"),ie=p("Similarly, you are specifying that ANY of the given roles should allow access to a user principal who has it."),En=f(),I=c("h3"),d(ns.$$.fragment),ye=p(" AllowAnonymous() method"),Cn=f(),qs=c("ul"),js=c("li"),ue=p("Use this method if you'd like to allow unauthenticated users to access a particular endpoint. it is also possible to specify which http verbs you'd like to allow anonymous access to like so:"),gn=f(),d(Fs.$$.fragment),es=c("p"),fe=p("The above endpoint is listening for all 3 http methods on the same route but only "),Gs=c("strong"),Ae=p("POST"),Fe=p(` method is allowed to be accessed anonymously.
It is useful for example when you'd like to use the same handler logic for create/replace/update scenarios and create operation is allowed to be done by anonymous users.`),_n=f(),as=c("p"),de=p("Using just "),Ys=c("strong"),me=p("AllowAnonymous()"),$e=p(" without any arguments means all verbs are allowed anonymous access."),bn=f(),J=c("h2"),d(ls.$$.fragment),he=p(" Other Auth Providers"),wn=f(),ks=c("p"),Ee=p("All auth providers compatible with the ASP.NET middleware pipeline can be registered and used like above."),vn=f(),d(os.$$.fragment),Dn=f(),W=c("h2"),d(ts.$$.fragment),Ce=p(" Multiple Authentication Schemes"),qn=f(),Ss=c("p"),ge=p("It is possible to register multiple auth schemes at startup and specify per endpoint which schemes are to be used for authenticating incoming requests."),kn=f(),d(ds.$$.fragment),d(ms.$$.fragment),q=c("p"),_e=p("In the above example, we're registering both "),Ms=c("strong"),be=p("Cookie"),we=p(" and "),zs=c("strong"),ve=p("JWT Bearer"),De=p(" auth schemes and in the endpoint we're saying "),Ks=c("strong"),qe=p("only JWT Bearer"),ke=p(` auth scheme should be used for authenticating incoming requests to the endpoint.
You can specify multiple schemes and if an incoming request isn't using any of the said schemes, access will not be allowed.`),this.h()},l(s){l=B(s,"H1",{});var e=i(l);y=r(e,a),e.forEach(n),S=A(s),b=B(s,"H2",{id:!0,tabindex:!0});var Ps=i(b);m(v.$$.fragment,Ps),j=r(Ps," Securing Endpoints"),Ps.forEach(n),_=A(s),g=B(s,"P",{});var $s=i(g);Es=r($s,"Endpoints are secure by default and you'd have to call "),G=B($s,"STRONG",{});var Qs=i(G);Un=r(Qs,"AllowAnonymous()"),Qs.forEach(n),Rn=r($s," in the configuration if you'd like to allow unauthenticated users to access a particular endpoint."),$s.forEach(n),an=A(s),P=B(s,"H2",{id:!0,tabindex:!0});var Ts=i(P);m(Y.$$.fragment,Ts),Ln=r(Ts," JWT Bearer Authentication"),Ts.forEach(n),ln=A(s),M=B(s,"P",{});var hs=i(M);Hn=r(hs,`Support for easy JWT Bearer Authentication is provided.
You simply need to install the `),Rs=B(hs,"STRONG",{});var Xs=i(Rs);On=r(Xs,"FastEndpoints.Security"),Xs.forEach(n),In=r(hs," package and register it in the middleware pipeline like so:"),hs.forEach(n),on=A(s),m(rs.$$.fragment,s),m(cs.$$.fragment,s),T=B(s,"H2",{id:!0,tabindex:!0});var xs=i(T);m(z.$$.fragment,xs),Jn=r(xs," Generating JWT Tokens"),xs.forEach(n),tn=A(s),Cs=B(s,"P",{});var Zs=i(Cs);Wn=r(Zs,"You can generate a JWT token for sending to the client with an endpoint that signs in users like so:"),Zs.forEach(n),pn=A(s),m(Bs.$$.fragment,s),x=B(s,"H2",{id:!0,tabindex:!0});var Us=i(x);m(K.$$.fragment,Us),Nn=r(Us," Endpoint Authorization"),Us.forEach(n),rn=A(s),gs=B(s,"P",{});var sn=i(gs);jn=r(sn,"Once an authentication provider is registered such as JWT Bearer as shown above, you can restrict access to users based on the following:"),sn.forEach(n),cn=A(s),D=B(s,"UL",{});var k=i(D);Ls=B(k,"LI",{});var nn=i(Ls);Gn=r(nn,"Policies"),nn.forEach(n),Yn=A(k),Hs=B(k,"LI",{});var en=i(Hs);Mn=r(en,"Claims"),en.forEach(n),zn=A(k),Os=B(k,"LI",{});var Oe=i(Os);Kn=r(Oe,"Roles"),Oe.forEach(n),Vn=A(k),Is=B(k,"LI",{});var Ie=i(Is);Qn=r(Ie,"Permissions"),Ie.forEach(n),k.forEach(n),Bn=A(s),U=B(s,"H2",{id:!0,tabindex:!0});var Se=i(U);m(V.$$.fragment,Se),Xn=r(Se," Pre-Built Security Policies"),Se.forEach(n),yn=A(s),_s=B(s,"P",{});var Je=i(_s);Zn=r(Je,"Security policies can be pre-built and registered during app startup and endpoints can choose to allow access to users based on the registered policy names like so:"),Je.forEach(n),un=A(s),m(is.$$.fragment,s),m(ys.$$.fragment,s),R=B(s,"H2",{id:!0,tabindex:!0});var Pe=i(R);m(Q.$$.fragment,Pe),se=r(Pe," Declarative Security Policies"),Pe.forEach(n),fn=A(s),bs=B(s,"P",{});var We=i(bs);ne=r(We,"Instead of registering each security policy at startup you can selectively specify security requirements for each endpoint in the endpoint configuration itself like so:"),We.forEach(n),An=A(s),m(us.$$.fragment,s),L=B(s,"H3",{id:!0,tabindex:!0});var Te=i(L);m(X.$$.fragment,Te),ee=r(Te," Claims() method"),Te.forEach(n),Fn=A(s),ws=B(s,"UL",{});var Ne=i(ws);fs=B(Ne,"LI",{});var Sn=i(fs);ae=r(Sn,"With this method you are specifying that if a user principal has ANY of the specified claims, access should be allowed. if the requirement is to allow access only if ALL specified claims are present, you can use the "),Js=B(Sn,"STRONG",{});var je=i(Js);le=r(je,"ClaimsAll()"),je.forEach(n),oe=r(Sn," method."),Sn.forEach(n),Ne.forEach(n),dn=A(s),H=B(s,"H3",{id:!0,tabindex:!0});var xe=i(H);m(Z.$$.fragment,xe),te=r(xe," Permissions() method"),xe.forEach(n),mn=A(s),vs=B(s,"UL",{});var Ge=i(vs);As=B(Ge,"LI",{});var Pn=i(As);pe=r(Pn,"Just like above, you can specify that ANY of the specified permissions should allow access. Or require ALL of the specified permissions by using the "),Ws=B(Pn,"STRONG",{});var Ye=i(Ws);re=r(Ye,"PermissionsAll()"),Ye.forEach(n),ce=r(Pn," method."),Pn.forEach(n),Ge.forEach(n),$n=A(s),O=B(s,"H3",{id:!0,tabindex:!0});var Ue=i(O);m(ss.$$.fragment,Ue),Be=r(Ue," Roles() method"),Ue.forEach(n),hn=A(s),Ds=B(s,"UL",{});var Me=i(Ds);Ns=B(Me,"LI",{});var ze=i(Ns);ie=r(ze,"Similarly, you are specifying that ANY of the given roles should allow access to a user principal who has it."),ze.forEach(n),Me.forEach(n),En=A(s),I=B(s,"H3",{id:!0,tabindex:!0});var Re=i(I);m(ns.$$.fragment,Re),ye=r(Re," AllowAnonymous() method"),Re.forEach(n),Cn=A(s),qs=B(s,"UL",{});var Ke=i(qs);js=B(Ke,"LI",{});var Ve=i(js);ue=r(Ve,"Use this method if you'd like to allow unauthenticated users to access a particular endpoint. it is also possible to specify which http verbs you'd like to allow anonymous access to like so:"),Ve.forEach(n),Ke.forEach(n),gn=A(s),m(Fs.$$.fragment,s),es=B(s,"P",{});var Tn=i(es);fe=r(Tn,"The above endpoint is listening for all 3 http methods on the same route but only "),Gs=B(Tn,"STRONG",{});var Qe=i(Gs);Ae=r(Qe,"POST"),Qe.forEach(n),Fe=r(Tn,` method is allowed to be accessed anonymously.
It is useful for example when you'd like to use the same handler logic for create/replace/update scenarios and create operation is allowed to be done by anonymous users.`),Tn.forEach(n),_n=A(s),as=B(s,"P",{});var xn=i(as);de=r(xn,"Using just "),Ys=B(xn,"STRONG",{});var Xe=i(Ys);me=r(Xe,"AllowAnonymous()"),Xe.forEach(n),$e=r(xn," without any arguments means all verbs are allowed anonymous access."),xn.forEach(n),bn=A(s),J=B(s,"H2",{id:!0,tabindex:!0});var Le=i(J);m(ls.$$.fragment,Le),he=r(Le," Other Auth Providers"),Le.forEach(n),wn=A(s),ks=B(s,"P",{});var Ze=i(ks);Ee=r(Ze,"All auth providers compatible with the ASP.NET middleware pipeline can be registered and used like above."),Ze.forEach(n),vn=A(s),m(os.$$.fragment,s),Dn=A(s),W=B(s,"H2",{id:!0,tabindex:!0});var He=i(W);m(ts.$$.fragment,He),Ce=r(He," Multiple Authentication Schemes"),He.forEach(n),qn=A(s),Ss=B(s,"P",{});var sa=i(Ss);ge=r(sa,"It is possible to register multiple auth schemes at startup and specify per endpoint which schemes are to be used for authenticating incoming requests."),sa.forEach(n),kn=A(s),m(ds.$$.fragment,s),m(ms.$$.fragment,s),q=B(s,"P",{});var ps=i(q);_e=r(ps,"In the above example, we're registering both "),Ms=B(ps,"STRONG",{});var na=i(Ms);be=r(na,"Cookie"),na.forEach(n),we=r(ps," and "),zs=B(ps,"STRONG",{});var ea=i(zs);ve=r(ea,"JWT Bearer"),ea.forEach(n),De=r(ps," auth schemes and in the endpoint we're saying "),Ks=B(ps,"STRONG",{});var aa=i(Ks);qe=r(aa,"only JWT Bearer"),aa.forEach(n),ke=r(ps,` auth scheme should be used for authenticating incoming requests to the endpoint.
You can specify multiple schemes and if an incoming request isn't using any of the said schemes, access will not be allowed.`),ps.forEach(n),this.h()},h(){F(b,"id","securing-endpoints"),F(b,"tabindex","-1"),F(P,"id","jwt-bearer-authentication"),F(P,"tabindex","-1"),F(T,"id","generating-jwt-tokens"),F(T,"tabindex","-1"),F(x,"id","endpoint-authorization"),F(x,"tabindex","-1"),F(U,"id","pre-built-security-policies"),F(U,"tabindex","-1"),F(R,"id","declarative-security-policies"),F(R,"tabindex","-1"),F(L,"id","claims-method"),F(L,"tabindex","-1"),F(H,"id","permissions-method"),F(H,"tabindex","-1"),F(O,"id","roles-method"),F(O,"tabindex","-1"),F(I,"id","allowanonymous-method"),F(I,"tabindex","-1"),F(J,"id","other-auth-providers"),F(J,"tabindex","-1"),F(W,"id","multiple-authentication-schemes"),F(W,"tabindex","-1")},m(s,e){t(s,l,e),o(l,y),t(s,S,e),t(s,b,e),$(v,b,null),o(b,j),t(s,_,e),t(s,g,e),o(g,Es),o(g,G),o(G,Un),o(g,Rn),t(s,an,e),t(s,P,e),$(Y,P,null),o(P,Ln),t(s,ln,e),t(s,M,e),o(M,Hn),o(M,Rs),o(Rs,On),o(M,In),t(s,on,e),$(rs,s,e),$(cs,s,e),t(s,T,e),$(z,T,null),o(T,Jn),t(s,tn,e),t(s,Cs,e),o(Cs,Wn),t(s,pn,e),$(Bs,s,e),t(s,x,e),$(K,x,null),o(x,Nn),t(s,rn,e),t(s,gs,e),o(gs,jn),t(s,cn,e),t(s,D,e),o(D,Ls),o(Ls,Gn),o(D,Yn),o(D,Hs),o(Hs,Mn),o(D,zn),o(D,Os),o(Os,Kn),o(D,Vn),o(D,Is),o(Is,Qn),t(s,Bn,e),t(s,U,e),$(V,U,null),o(U,Xn),t(s,yn,e),t(s,_s,e),o(_s,Zn),t(s,un,e),$(is,s,e),$(ys,s,e),t(s,R,e),$(Q,R,null),o(R,se),t(s,fn,e),t(s,bs,e),o(bs,ne),t(s,An,e),$(us,s,e),t(s,L,e),$(X,L,null),o(L,ee),t(s,Fn,e),t(s,ws,e),o(ws,fs),o(fs,ae),o(fs,Js),o(Js,le),o(fs,oe),t(s,dn,e),t(s,H,e),$(Z,H,null),o(H,te),t(s,mn,e),t(s,vs,e),o(vs,As),o(As,pe),o(As,Ws),o(Ws,re),o(As,ce),t(s,$n,e),t(s,O,e),$(ss,O,null),o(O,Be),t(s,hn,e),t(s,Ds,e),o(Ds,Ns),o(Ns,ie),t(s,En,e),t(s,I,e),$(ns,I,null),o(I,ye),t(s,Cn,e),t(s,qs,e),o(qs,js),o(js,ue),t(s,gn,e),$(Fs,s,e),t(s,es,e),o(es,fe),o(es,Gs),o(Gs,Ae),o(es,Fe),t(s,_n,e),t(s,as,e),o(as,de),o(as,Ys),o(Ys,me),o(as,$e),t(s,bn,e),t(s,J,e),$(ls,J,null),o(J,he),t(s,wn,e),t(s,ks,e),o(ks,Ee),t(s,vn,e),$(os,s,e),t(s,Dn,e),t(s,W,e),$(ts,W,null),o(W,Ce),t(s,qn,e),t(s,Ss,e),o(Ss,ge),t(s,kn,e),$(ds,s,e),$(ms,s,e),t(s,q,e),o(q,_e),o(q,Ms),o(Ms,be),o(q,we),o(q,zs),o(zs,ve),o(q,De),o(q,Ks),o(Ks,qe),o(q,ke),Vs=!0},p(s,[e]){(!Vs||e&1)&&a!==(a=s[0].title+"")&&pa(y,a);const Ps={};e&2&&(Ps.$$scope={dirty:e,ctx:s}),v.$set(Ps);const $s={};e&2&&($s.$$scope={dirty:e,ctx:s}),Y.$set($s);const Qs={};e&2&&(Qs.$$scope={dirty:e,ctx:s}),z.$set(Qs);const Ts={};e&2&&(Ts.$$scope={dirty:e,ctx:s}),K.$set(Ts);const hs={};e&2&&(hs.$$scope={dirty:e,ctx:s}),V.$set(hs);const Xs={};e&2&&(Xs.$$scope={dirty:e,ctx:s}),Q.$set(Xs);const xs={};e&2&&(xs.$$scope={dirty:e,ctx:s}),X.$set(xs);const Zs={};e&2&&(Zs.$$scope={dirty:e,ctx:s}),Z.$set(Zs);const Us={};e&2&&(Us.$$scope={dirty:e,ctx:s}),ss.$set(Us);const sn={};e&2&&(sn.$$scope={dirty:e,ctx:s}),ns.$set(sn);const k={};e&2&&(k.$$scope={dirty:e,ctx:s}),ls.$set(k);const nn={};e&2&&(nn.$$scope={dirty:e,ctx:s}),os.$set(nn);const en={};e&2&&(en.$$scope={dirty:e,ctx:s}),ts.$set(en)},i(s){Vs||(h(v.$$.fragment,s),h(Y.$$.fragment,s),h(rs.$$.fragment,s),h(cs.$$.fragment,s),h(z.$$.fragment,s),h(Bs.$$.fragment,s),h(K.$$.fragment,s),h(V.$$.fragment,s),h(is.$$.fragment,s),h(ys.$$.fragment,s),h(Q.$$.fragment,s),h(us.$$.fragment,s),h(X.$$.fragment,s),h(Z.$$.fragment,s),h(ss.$$.fragment,s),h(ns.$$.fragment,s),h(Fs.$$.fragment,s),h(ls.$$.fragment,s),h(os.$$.fragment,s),h(ts.$$.fragment,s),h(ds.$$.fragment,s),h(ms.$$.fragment,s),Vs=!0)},o(s){E(v.$$.fragment,s),E(Y.$$.fragment,s),E(rs.$$.fragment,s),E(cs.$$.fragment,s),E(z.$$.fragment,s),E(Bs.$$.fragment,s),E(K.$$.fragment,s),E(V.$$.fragment,s),E(is.$$.fragment,s),E(ys.$$.fragment,s),E(Q.$$.fragment,s),E(us.$$.fragment,s),E(X.$$.fragment,s),E(Z.$$.fragment,s),E(ss.$$.fragment,s),E(ns.$$.fragment,s),E(Fs.$$.fragment,s),E(ls.$$.fragment,s),E(os.$$.fragment,s),E(ts.$$.fragment,s),E(ds.$$.fragment,s),E(ms.$$.fragment,s),Vs=!1},d(s){s&&n(l),s&&n(S),s&&n(b),C(v),s&&n(_),s&&n(g),s&&n(an),s&&n(P),C(Y),s&&n(ln),s&&n(M),s&&n(on),C(rs,s),C(cs,s),s&&n(T),C(z),s&&n(tn),s&&n(Cs),s&&n(pn),C(Bs,s),s&&n(x),C(K),s&&n(rn),s&&n(gs),s&&n(cn),s&&n(D),s&&n(Bn),s&&n(U),C(V),s&&n(yn),s&&n(_s),s&&n(un),C(is,s),C(ys,s),s&&n(R),C(Q),s&&n(fn),s&&n(bs),s&&n(An),C(us,s),s&&n(L),C(X),s&&n(Fn),s&&n(ws),s&&n(dn),s&&n(H),C(Z),s&&n(mn),s&&n(vs),s&&n($n),s&&n(O),C(ss),s&&n(hn),s&&n(Ds),s&&n(En),s&&n(I),C(ns),s&&n(Cn),s&&n(qs),s&&n(gn),C(Fs,s),s&&n(es),s&&n(_n),s&&n(as),s&&n(bn),s&&n(J),C(ls),s&&n(wn),s&&n(ks),s&&n(vn),C(os,s),s&&n(Dn),s&&n(W),C(ts),s&&n(qn),s&&n(Ss),s&&n(kn),C(ds,s),C(ms,s),s&&n(q)}}}function va(u,l,a){let y;return ra(u,ca,S=>a(0,y=S)),[y]}class Ua extends la{constructor(l){super(),oa(this,l,va,wa,ta,{})}}export{Ua as default};
